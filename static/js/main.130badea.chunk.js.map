{"version":3,"sources":["reportWebVitals.js","app/utils/ validator.js","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radio.Field.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/backButton.jsx","app/services/localStorage.service.js","app/services/auth.service.js","app/services/http.service.js","app/services/qaulity.service.js","app/utils/isOutdated.js","app/store/qualities.js","app/services/profession.service.js","app/store/professions.js","app/services/user.service.js","app/utils/generateAuthError.js","app/utils/getRandomInt.js","app/utils/history.js","app/store/users.js","app/components/page/editUserPage/index.js","app/components/page/editUserPage/editUserPage.jsx","app/components/ui/userCard.jsx","app/components/ui/qualities/quality.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","app/services/comment.service.js","app/store/comments.js","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/utils/paginate.js","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","app/components/ui/profession.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/components/ui/hoc/usersLoader.jsx","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/layouts/main.jsx","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/fake.api/comments.api.js","app/api/fake.api/ligues.api.js","app/api/fake.api/article.api.js","app/api/fake.api/tags.api.js","app/api/index.js","app/components/ui/searchStatusEvent.jsx","app/components/ui/tags/tag.jsx","app/components/ui/tags/tagsList.jsx","app/components/page/eventsListPage/article.jsx","app/components/page/eventsListPage/groupHeader.jsx","app/components/page/eventsListPage/articlesGroup.jsx","app/components/ui/loader.jsx","app/components/page/eventsListPage/articlesList.jsx","app/components/page/eventsListPage/editArticlePage.jsx","app/components/page/eventsListPage/articlePage.jsx","app/layouts/events.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/components/page/eventsListPage/addArticlePage.jsx","app/components/common/protectedRoute.jsx","app/layouts/logOut.jsx","app/components/ui/hoc/appLoader.jsx","app/App.js","app/store/createStore.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","TextField","label","type","name","onChange","useState","showPassword","setShowPassword","className","htmlFor","id","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","keys","map","optionName","_id","disabled","option","RadioField","handleChange","checked","MultiSelectField","defaultValue","isMulti","closeMenuOnSelect","classNamePrefix","BackHistoryButton","history","useHistory","goBack","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USERID_KEY","localStorageService","setTokens","refreshToken","idToken","localId","expiresIn","expiresDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","httpAuth","axios","create","baseURL","params","key","authService","register","a","email","password","post","returnSecureToken","login","refresh","grant_type","refresh_token","http","configFile","apiEndpoint","interceptors","request","use","isFireBase","containSlash","url","slice","now","id_token","expires_in","user_id","accessToken","auth","Promise","reject","response","res","content","status","console","log","toast","httpService","get","put","delete","patch","qualityService","fetchAll","isOutdated","date","qualitiesSlice","createSlice","initialState","entities","isLoading","lastFetch","reducers","qualitiesRequested","state","qualitiesReceved","action","payload","qualitiesRequestFiled","qualitiesReducer","reducer","actions","loadQualitiesList","dispatch","getState","qualities","professionService","req","professionsSlice","professionsRequested","professionsReceved","professionsRequestFiled","professionsReducer","userEndpoint","userService","getCurrentUser","update","generetaAuthError","getRandomInt","min","max","Math","floor","random","createBrowserHistory","userId","isLoggedIn","dataLoaded","usersSlice","usersRequested","usersReceved","usersRequestFiled","authRequestSuccess","authRequestFailed","userCreated","push","userLoggedOut","userUpdateSuccessed","findIndex","u","authRequested","usersReducer","createAction","userCreateRequested","createUserFailed","userUpdateFailed","userUpdateRequested","createUser","loadUsersList","getUserById","users","find","EditUserPage","setIsLoading","setData","currentUser","useSelector","useDispatch","qualitiesLoading","qualitiesList","q","professions","professionLoading","professionsList","p","setErrors","transformData","qualitiesIds","qualitiesArray","qualId","quality","getQualitiesListByIds","qual","useEffect","validatorConfog","isRequired","isEmail","isValid","onSubmit","e","preventDefault","profession","sex","UserCard","user","location","pathname","src","image","width","role","rate","Quality","color","Qualities","QualitiesCard","MeetingsCard","displayDate","parseInt","dateNow","getFullYear","getDay","getHours","minutesDif","getMinutes","toLocaleString","month","getMonth","getDate","Comment","created","created_at","onRemove","currentUserId","alt","height","CommentsList","comments","comment","TextAreaField","AddCommentForm","commentEndpoint","commentService","createComment","getComments","pageId","orderBy","equalTo","removeComment","commentId","commentsSlice","commentsRequested","commentsReceved","commentsRequestFiled","commetnCreated","commentRemoved","filter","c","commentsReducer","addCommentRequested","removeCommentRequested","Comments","useParams","loadCommentsList","sortedComments","nanoid","UserPage","completedMeetings","paginate","items","pageNumber","pageSize","startIndex","_","take","Pagination","itemsCount","onPageChange","currentPage","pagesCount","ceil","pages","range","page","GroupList","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","number","lastOne","Number","toString","indexOf","renderPhrase","BookMark","rest","TableBody","columns","renderContent","column","component","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","children","Profession","prof","getProfessionbyId","UserTable","onToggleBookMark","to","bookmark","UsersListPage","professionsLoading","setCurrentPage","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","count","usersCrop","placeholder","onDelete","newArray","pageIndex","UsersLoader","dataStatus","propTypes","PropTypes","oneOfType","arrayOf","node","Users","edit","CheckBoxField","LoginForm","stayOn","loginError","dispath","redirect","from","code","errorMessage","RegisterForm","licence","isCapitalSymbol","isContainDigit","newData","substring","signUp","Login","formType","setFormType","toggleFormType","Main","professionsObject","doctor","waiter","physics","engineer","actor","cook","resolve","window","setTimeout","tedious","strange","buller","alcoholic","handsome","uncertain","JSON","stringify","parse","getById","userIndex","fetchCommentsForUser","add","newComment","substr","remove","newComments","x","liguesObject","cinema","watch","events","concerts","shows","kids","sport","meetings","tags","forSports","forMusic","forGames","forKids","forMeetings","articles","title","text","ligue","ligues","adress","new","gossip","stats","transfer","board","API","article","articleIndex","newArticle","searchStatusEvent","Tag","TagsList","tag","Article","GroupHeader","renderSortArrow","iter","style","textDecoration","ArticlesGroup","Loader","ArticlesList","setLigues","selectedLigue","setSelectedLigue","setArticles","filteredArticles","articleCrop","articleId","EditArticlePage","setTags","getLigueById","lig","ligData","getTags","elements","tagsArray","elem","validatorConfig","ArticlePage","setArticle","Events","NavProfile","isOpen","setOpen","NavBar","aria-current","AddArticlePage","ProtectedRoute","Component","render","props","LogOut","AppLoader","usersStatusLoading","App","exact","require","combineReducers","configureStore","rootReducer","store","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.130badea.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n                getCLS(onPerfEntry);\n                getFID(onPerfEntry);\n                getFCP(onPerfEntry);\n                getLCP(onPerfEntry);\n                getTTFB(onPerfEntry);\n            }\n        );\n    }\n};\n\nexport default reportWebVitals;\n","export function validator(data, config) {\n    const errors = {};\n    function validate(validateMethod, data, config) {\n        let statusValidate;\n        switch (validateMethod) {\n            case \"isRequired\": {\n                if (typeof data === \"boolean\") {\n                    statusValidate = !data;\n                } else {\n                    statusValidate = data.trim() === \"\";\n                }\n                break;\n            }\n            case \"isEmail\": {\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\n                statusValidate = !emailRegExp.test(data);\n                break;\n            }\n            case \"isCapitalSymbol\": {\n                const capitalRegExp = /[A-Z]+/g;\n                statusValidate = !capitalRegExp.test(data);\n                break;\n            }\n            case \"isContainDigit\": {\n                const digitRegExp = /\\d+/g;\n                statusValidate = !digitRegExp.test(data);\n                break;\n            }\n            case \"min\": {\n                statusValidate = data.length < config.value;\n                break;\n            }\n            default:\n                break;\n        }\n        if (statusValidate) return config.message;\n    }\n    for (const fieldName in data) {\n        for (const validateMethod in config[fieldName]) {\n            const error = validate(\n                validateMethod,\n                data[fieldName],\n                config[fieldName][validateMethod]\n            );\n            if (error && !errors[fieldName]) {\n                errors[fieldName] = error;\n            }\n        }\n    }\n    return errors;\n}\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextField = ({ label, type, name, value, onChange, error }) => {\n    const [showPassword, setShowPassword] = useState(false);\n\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n    const toggleShowPassword = () => {\n        setShowPassword((prevState) => !prevState);\n    };\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <input\n                    type={showPassword ? \"text\" : type}\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {type === \"password\" && (\n                    <button\n                        className=\"btn btn-outline-secondary\"\n                        type=\"button\"\n                        onClick={toggleShowPassword}\n                    >\n                        <i\n                            className={\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\n                            }\n                        ></i>\n                    </button>\n                )}\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextField.defaultProps = {\n    type: \"text\"\n};\nTextField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SelectField = ({\n    label,\n    value,\n    onChange,\n    defaultOption,\n    options,\n    error,\n    name\n}) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.keys(options).map((optionName) => ({\n                  _id: options[optionName]._id,\n                  name: options[optionName].name\n              }))\n            : options;\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name} className=\"form-label\">\n                {label}\n            </label>\n            <select\n                className={getInputClasses()}\n                id={name}\n                name={name}\n                value={value}\n                onChange={handleChange}\n            >\n                <option disabled value=\"\">\n                    {defaultOption}\n                </option>\n                {optionsArray &&\n                    optionsArray.map((option) => (\n                        <option\n                            value={option.value}\n                            key={option.value || option._id}\n                        >\n                            {option.name}\n                        </option>\n                    ))}\n            </select>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nSelectField.propTypes = {\n    defaultOption: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string,\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    name: PropTypes.string\n};\n\nexport default SelectField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst RadioField = ({ options, name, onChange, value, label }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <div>\n                {options.map((option) => (\n                    <div\n                        key={option.name + \"_\" + option.value}\n                        className=\"form-check form-check-inline\"\n                    >\n                        <input\n                            className=\"form-check-input\"\n                            type=\"radio\"\n                            name={name}\n                            id={option.name + \"_\" + option.value}\n                            checked={option.value === value}\n                            value={option.value}\n                            onChange={handleChange}\n                        />\n                        <label\n                            className=\"form-check-label\"\n                            htmlFor={option.name + \"_\" + option.value}\n                        >\n                            {option.name}\n                        </label>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nRadioField.propTypes = {\n    options: PropTypes.array,\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n    label: PropTypes.string\n};\n\nexport default RadioField;\n","import React from \"react\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\n\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\n    const optionsArray =\n        !Array.isArray(options) && typeof options === \"object\"\n            ? Object.keys(options).map((optionName) => ({\n                  label: options[optionName].name,\n                  value: options[optionName]._id\n              }))\n            : options;\n\n    const handleChange = (value) => {\n        onChange({ name: name, value });\n    };\n    return (\n        <div className=\"mb-4\">\n            <label className=\"form-label\">{label}</label>\n            <Select\n                isMulti\n                closeMenuOnSelect={false}\n                defaultValue={defaultValue}\n                options={optionsArray}\n                className=\"basic-multi-select\"\n                classNamePrefix=\"select\"\n                onChange={handleChange}\n                name={name}\n            />\n        </div>\n    );\n};\nMultiSelectField.propTypes = {\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    onChange: PropTypes.func,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    defaultValue: PropTypes.array\n};\n\nexport default MultiSelectField;\n","import React from \"react\";\nimport { useHistory } from \"react-router\";\nconst BackHistoryButton = () => {\n    const history = useHistory();\n    return (\n        <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\n            <i className=\"bi bi-caret-left\"></i>\n            Назад\n        </button>\n    );\n};\n\nexport default BackHistoryButton;\n","const TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\nconst USERID_KEY = \"user-local-id\";\n\nexport function setTokens({\n    refreshToken,\n    idToken,\n    localId,\n    expiresIn = 3600\n}) {\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\n    localStorage.setItem(USERID_KEY, localId);\n    localStorage.setItem(TOKEN_KEY, idToken);\n    localStorage.setItem(REFRESH_KEY, refreshToken);\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\n}\nexport function getAccessToken() {\n    return localStorage.getItem(TOKEN_KEY);\n}\nexport function getRefreshToken() {\n    return localStorage.getItem(REFRESH_KEY);\n}\nexport function removeAuthData() {\n    localStorage.removeItem(USERID_KEY);\n    localStorage.removeItem(TOKEN_KEY);\n    localStorage.removeItem(REFRESH_KEY);\n    localStorage.removeItem(EXPIRES_KEY);\n}\n\nexport function getTokenExpiresDate() {\n    return localStorage.getItem(EXPIRES_KEY);\n}\nexport function getUserId() {\n    return localStorage.getItem(USERID_KEY);\n}\nconst localStorageService = {\n    setTokens,\n    getAccessToken,\n    getRefreshToken,\n    getTokenExpiresDate,\n    getUserId,\n    removeAuthData\n};\nexport default localStorageService;\n","import axios from \"axios\";\nimport localStorageService from \"./localStorage.service\";\n\nconst httpAuth = axios.create({\n    baseURL: \"https://identitytoolkit.googleapis.com/v1/\",\n    params: {\n        key: \"AIzaSyCMa4BQnrF_NkJw11JQGLumSYSRna-vEC4\"\n    }\n});\n\nconst authService = {\n    register: async ({ email, password }) => {\n        const { data } = await httpAuth.post(`accounts:signUp`, {\n            email,\n            password,\n            returnSecureToken: true\n        });\n        return data;\n    },\n    login: async ({ email, password }) => {\n        const { data } = await httpAuth.post(`accounts:signInWithPassword`, {\n            email,\n            password,\n            returnSecureToken: true\n        });\n        return data;\n    },\n    refresh: async () => {\n        const { data } = await httpAuth.post(\"token\", {\n            grant_type: \"refresh_token\",\n            refresh_token: localStorageService.getRefreshToken()\n        });\n        return data;\n    }\n};\nexport default authService;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport configFile from \"../config.json\";\nimport authService from \"./auth.service\";\n\nimport localStorageService from \"./localStorage.service\";\n\nconst http = axios.create({\n    baseURL: configFile.apiEndpoint\n});\n\nhttp.interceptors.request.use(\n    async function (config) {\n        if (configFile.isFireBase) {\n            const containSlash = /\\/$/gi.test(config.url);\n            config.url =\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\n            const expiresDate = localStorageService.getTokenExpiresDate();\n            const refreshToken = localStorageService.getRefreshToken();\n            if (refreshToken && expiresDate < Date.now()) {\n                const data = await authService.refresh();\n\n                localStorageService.setTokens({\n                    refreshToken: data.refresh_token,\n                    idToken: data.id_token,\n                    expiresIn: data.expires_in,\n                    localId: data.user_id\n                });\n            }\n            const accessToken = localStorageService.getAccessToken();\n            if (accessToken) {\n                config.params = { ...config.params, auth: accessToken };\n            }\n        }\n        return config;\n    },\n    function (error) {\n        return Promise.reject(error);\n    }\n);\nfunction transormData(data) {\n    return data && !data._id\n        ? Object.keys(data).map((key) => ({\n              ...data[key]\n          }))\n        : data;\n}\nhttp.interceptors.response.use(\n    (res) => {\n        if (configFile.isFireBase) {\n            res.data = { content: transormData(res.data) };\n        }\n        return res;\n    },\n    function (error) {\n        const expectedErrors =\n            error.response &&\n            error.response.status >= 400 &&\n            error.response.status < 500;\n\n        if (!expectedErrors) {\n            console.log(error);\n            toast.error(\"Somthing was wrong. Try it later\");\n        }\n        return Promise.reject(error);\n    }\n);\nconst httpService = {\n    get: http.get,\n    post: http.post,\n    put: http.put,\n    delete: http.delete,\n    patch: http.patch\n};\nexport default httpService;\n","import httpService from \"./http.service\";\nconst qualityEndpoint = \"quality/\";\n\nconst qualityService = {\n    fetchAll: async () => {\n        const { data } = await httpService.get(qualityEndpoint);\n        return data;\n    }\n};\nexport default qualityService;\n","function isOutdated(date) {\n    if (Date.now() - date > 10 * 60 * 100) {\n        return true;\n    }\n    return false;\n}\nexport default isOutdated;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport qualityService from \"../services/qaulity.service\";\nimport isOutdated from \"../utils/isOutdated\";\n\nconst qualitiesSlice = createSlice({\n    name: \"qualities\",\n    initialState: {\n        entities: null,\n        isLoading: true,\n        error: null,\n        lastFetch: null\n    },\n    reducers: {\n        qualitiesRequested: (state) => {\n            state.isLoading = true;\n        },\n        qualitiesReceved: (state, action) => {\n            state.entities = action.payload;\n            state.lastFetch = Date.now();\n            state.isLoading = false;\n        },\n        qualitiesRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        }\n    }\n});\n\nconst { reducer: qualitiesReducer, actions } = qualitiesSlice;\nconst { qualitiesRequested, qualitiesReceved, qualitiesRequestFiled } = actions;\n\nexport const loadQualitiesList = () => async (dispatch, getState) => {\n    const { lastFetch } = getState().qualities;\n    if (isOutdated(lastFetch)) {\n        dispatch(qualitiesRequested());\n        try {\n            const { content } = await qualityService.fetchAll();\n            dispatch(qualitiesReceved(content));\n        } catch (error) {\n            dispatch(qualitiesRequestFiled(error.message));\n        }\n    }\n};\n\nexport const getQualities = () => (state) => state.qualities.entities;\nexport const getQualitiesLoadingStatus = () => (state) =>\n    state.qualities.isLoading;\nexport const getQulitiesByIds = (qualitiesIds) => (state) => {\n    if (state.qualities.entities) {\n        const qualitiesArray = [];\n        for (const qualId of qualitiesIds) {\n            for (const quality of state.qualities.entities) {\n                if (quality._id === qualId) {\n                    qualitiesArray.push(quality);\n                    break;\n                }\n            }\n        }\n        return qualitiesArray;\n    }\n    return [];\n};\n\nexport default qualitiesReducer;\n","import httpService from \"./http.service\";\n\nconst professionEndpoint = \"profession/\";\n\nconst professionService = {\n    get: async () => {\n        const req = await httpService.get(professionEndpoint);\n        return req.data;\n    }\n};\nexport default professionService;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport professionService from \"../services/profession.service\";\nimport isOutdated from \"../utils/isOutdated\";\n\nconst professionsSlice = createSlice({\n    name: \"professions\",\n    initialState: {\n        entities: null,\n        isLoading: true,\n        error: null,\n        lastFetch: null\n    },\n    reducers: {\n        professionsRequested: (state) => {\n            state.isLoading = true;\n        },\n        professionsReceved: (state, action) => {\n            state.entities = action.payload;\n            state.lastFetch = Date.now();\n            state.isLoading = false;\n        },\n        professionsRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        }\n    }\n});\n\nconst { reducer: professionsReducer, actions } = professionsSlice;\nconst { professionsRequested, professionsReceved, professionsRequestFiled } =\n    actions;\n\nexport const loadProfessionsList = () => async (dispatch, getState) => {\n    const { lastFetch } = getState().professions;\n    if (isOutdated(lastFetch)) {\n        console.log(\"lastFetch\", lastFetch);\n        dispatch(professionsRequested());\n        try {\n            const { content } = await professionService.get();\n            dispatch(professionsReceved(content));\n        } catch (error) {\n            dispatch(professionsRequestFiled(error.message));\n        }\n    }\n};\nexport const getProfessions = () => (state) => state.professions.entities;\nexport const getProfessionsLoadingStatus = () => (state) =>\n    state.professions.isLoading;\nexport const getProfessionbyId = (id) => (state) => {\n    if (state.professions.entities) {\n        return state.professions.entities.find((p) => p._id === id);\n    }\n};\nexport default professionsReducer;\n","import httpService from \"./http.service\";\nimport localStorageService from \"./localStorage.service\";\n\nconst userEndpoint = \"user/\";\n\nconst userService = {\n    get: async () => {\n        const { data } = await httpService.get(userEndpoint);\n        return data;\n    },\n    create: async (payload) => {\n        const { data } = await httpService.put(\n            userEndpoint + payload._id,\n            payload\n        );\n        return data;\n    },\n    getCurrentUser: async () => {\n        const { data } = await httpService.get(\n            userEndpoint + localStorageService.getUserId()\n        );\n        return data;\n    },\n    update: async (payload) => {\n        const { data } = await httpService.patch(\n            userEndpoint + localStorageService.getUserId(),\n            payload\n        );\n        return data;\n    }\n};\nexport default userService;\n","export function generetaAuthError(message) {\n    switch (message) {\n        case \"INVALID_PASSWORD\":\n            return \"Email или пароль введены некорректно\";\n        case \"EMAIL_EXISTS\":\n            return \"Пользователь с таким Email уже существует\";\n        default:\n            return \"Слишком много попыток входа. Попробуйте позднее\";\n    }\n}\n","function getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\nexport default getRandomInt;\n","import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory();\nexport default history;\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport authService from \"../services/auth.service\";\nimport localStorageService from \"../services/localStorage.service\";\nimport userService from \"../services/user.service\";\nimport { generetaAuthError } from \"../utils/generateAuthError\";\nimport getRandomInt from \"../utils/getRandomInt\";\nimport history from \"../utils/history\";\nconst initialState = localStorageService.getAccessToken()\n    ? {\n          entities: null,\n          isLoading: true,\n          error: null,\n          auth: { userId: localStorageService.getUserId() },\n          isLoggedIn: true,\n          dataLoaded: false\n      }\n    : {\n          entities: null,\n          isLoading: false,\n          error: null,\n          auth: null,\n          isLoggedIn: false,\n          dataLoaded: false\n      };\n\nconst usersSlice = createSlice({\n    name: \"users\",\n    initialState,\n    reducers: {\n        usersRequested: (state) => {\n            state.isLoading = true;\n        },\n        usersReceved: (state, action) => {\n            state.entities = action.payload;\n            state.dataLoaded = true;\n            state.isLoading = false;\n        },\n        usersRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n        authRequestSuccess: (state, action) => {\n            state.auth = action.payload;\n            state.isLoggedIn = true;\n        },\n        authRequestFailed: (state, action) => {\n            state.error = action.payload;\n        },\n        userCreated: (state, action) => {\n            state.entities.push(action.payload);\n        },\n        userLoggedOut: (state) => {\n            state.entities = null;\n            state.isLoggedIn = false;\n            state.auth = null;\n            state.dataLoaded = false;\n        },\n        userUpdateSuccessed: (state, action) => {\n            state.entities[\n                state.entities.findIndex((u) => u._id === action.payload._id)\n            ] = action.payload;\n        },\n        authRequested: (state) => {\n            state.error = null;\n        }\n    }\n});\n\nconst { reducer: usersReducer, actions } = usersSlice;\nconst {\n    usersRequested,\n    usersReceved,\n    usersRequestFiled,\n    authRequestFailed,\n    authRequestSuccess,\n    userCreated,\n    userLoggedOut,\n    userUpdateSuccessed\n} = actions;\n\nconst authRequested = createAction(\"users/authRequested\");\nconst userCreateRequested = createAction(\"users/userCreateRequested\");\nconst createUserFailed = createAction(\"users/createUserFailed \");\nconst userUpdateFailed = createAction(\"users/userUpdateFailed\");\nconst userUpdateRequested = createAction(\"users/userUpdateRequested\");\n\nexport const login =\n    ({ payload, redirect }) =>\n    async (dispatch) => {\n        const { email, password } = payload;\n        dispatch(authRequested());\n        try {\n            const data = await authService.login({ email, password });\n            dispatch(authRequestSuccess({ userId: data.localId }));\n            localStorageService.setTokens(data);\n            history.push(redirect);\n        } catch (error) {\n            const { code, message } = error.response.data.error;\n            if (code === 400) {\n                const errorMessage = generetaAuthError(message);\n                dispatch(authRequestFailed(errorMessage));\n            } else {\n                dispatch(authRequestFailed(error.message));\n            }\n        }\n    };\n\nexport const signUp =\n    ({ email, password, ...rest }) =>\n    async (dispatch) => {\n        dispatch(authRequested());\n        try {\n            const data = await authService.register({ email, password });\n            localStorageService.setTokens(data);\n            dispatch(authRequestSuccess({ userId: data.localId }));\n            dispatch(\n                createUser({\n                    _id: data.localId,\n                    email,\n                    rate: getRandomInt(1, 5),\n                    completedMeetings: getRandomInt(0, 200),\n                    image: `https://avatars.dicebear.com/api/avataaars/${(\n                        Math.random() + 1\n                    )\n                        .toString(36)\n                        .substring(7)}.svg`,\n                    ...rest\n                })\n            );\n        } catch (error) {\n            dispatch(authRequestFailed(error.message));\n        }\n    };\nexport const logOut = () => (dispatch) => {\n    localStorageService.removeAuthData();\n    dispatch(userLoggedOut());\n    history.push(\"/\");\n};\nfunction createUser(payload) {\n    return async function (dispatch) {\n        dispatch(userCreateRequested());\n        try {\n            const { content } = await userService.create(payload);\n            dispatch(userCreated(content));\n            history.push(\"/users\");\n        } catch (error) {\n            dispatch(createUserFailed(error.message));\n        }\n    };\n}\nexport const loadUsersList = () => async (dispatch) => {\n    dispatch(usersRequested());\n    try {\n        const { content } = await userService.get();\n        dispatch(usersReceved(content));\n    } catch (error) {\n        dispatch(usersRequestFiled(error.message));\n    }\n};\nexport const updateUser = (payload) => async (dispatch) => {\n    dispatch(userUpdateRequested());\n    try {\n        const { content } = await userService.update(payload);\n        dispatch(userUpdateSuccessed(content));\n        history.push(`/users/${content._id}`);\n    } catch (error) {\n        dispatch(userUpdateFailed(error.message));\n    }\n};\n\nexport const getUsersList = () => (state) => state.users.entities;\nexport const getCurrentUserData = () => (state) => {\n    return state.users.entities\n        ? state.users.entities.find((u) => u._id === state.users.auth.userId)\n        : null;\n};\nexport const getUserById = (userId) => (state) => {\n    if (state.users.entities) {\n        return state.users.entities.find((u) => u._id === userId);\n    }\n};\n\nexport const getIsLoggedIn = () => (state) => state.users.isLoggedIn;\nexport const getDataStatus = () => (state) => state.users.dataLoaded;\nexport const getUsersLoadingStatus = () => (state) => state.users.isLoading;\nexport const getCurrentUserId = () => (state) => state.users.auth.userId;\nexport const getAuthErrors = () => (state) => state.users.error;\nexport default usersReducer;\n","import EditUserPage from \"./editUserPage\";\nexport default EditUserPage;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../../utils/ validator\";\nimport TextField from \"../../common/form/textField\";\nimport SelectField from \"../../common/form/selectField\";\nimport RadioField from \"../../common/form/radio.Field\";\nimport MultiSelectField from \"../../common/form/multiSelectField\";\nimport BackHistoryButton from \"../../common/backButton\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n    getQualities,\n    getQualitiesLoadingStatus\n} from \"../../../store/qualities\";\nimport {\n    getProfessions,\n    getProfessionsLoadingStatus\n} from \"../../../store/professions\";\nimport { getCurrentUserData, updateUser } from \"../../../store/users\";\n\nconst EditUserPage = () => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [data, setData] = useState();\n    const currentUser = useSelector(getCurrentUserData());\n    const dispatch = useDispatch();\n    const qualities = useSelector(getQualities());\n    const qualitiesLoading = useSelector(getQualitiesLoadingStatus());\n    const qualitiesList = qualities.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const professions = useSelector(getProfessions());\n    const professionLoading = useSelector(getProfessionsLoadingStatus());\n    const professionsList = professions.map((p) => ({\n        name: p.name,\n        value: p._id\n    }));\n\n    const [errors, setErrors] = useState({});\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        dispatch(\n            updateUser({\n                ...data,\n                qualities: data.qualities.map((q) => q.value)\n            })\n        );\n    };\n    function getQualitiesListByIds(qualitiesIds) {\n        const qualitiesArray = [];\n        for (const qualId of qualitiesIds) {\n            for (const quality of qualities) {\n                if (quality._id === qualId) {\n                    qualitiesArray.push(quality);\n                    break;\n                }\n            }\n        }\n        return qualitiesArray;\n    }\n    const transformData = (data) => {\n        const result = getQualitiesListByIds(data).map((qual) => ({\n            label: qual.name,\n            value: qual._id\n        }));\n\n        return result;\n    };\n    useEffect(() => {\n        if (!professionLoading && !qualitiesLoading && currentUser && !data) {\n            setData({\n                ...currentUser,\n                qualities: transformData(currentUser.qualities)\n            });\n        }\n    }, [professionLoading, qualitiesLoading, currentUser, data]);\n    useEffect(() => {\n        if (data && isLoading) {\n            setIsLoading(false);\n        }\n    }, [data]);\n\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n\n        name: {\n            isRequired: {\n                message: \"Введите ваше имя\"\n            }\n        }\n    };\n    useEffect(() => validate(), [data]);\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n    return (\n        <div className=\"container mt-5\">\n            <BackHistoryButton />\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {!isLoading && Object.keys(professions).length > 0 ? (\n                        <form onSubmit={handleSubmit}>\n                            <TextField\n                                label=\"Имя\"\n                                name=\"name\"\n                                value={data.name}\n                                onChange={handleChange}\n                                error={errors.name}\n                            />\n                            <TextField\n                                label=\"Электронная почта\"\n                                name=\"email\"\n                                value={data.email}\n                                onChange={handleChange}\n                                error={errors.email}\n                            />\n                            <SelectField\n                                label=\"Выберите свою профессию\"\n                                defaultOption=\"Выбор...\"\n                                name=\"profession\"\n                                options={professionsList}\n                                onChange={handleChange}\n                                value={data.profession}\n                                error={errors.profession}\n                            />\n                            <RadioField\n                                options={[\n                                    { name: \"Мужской\", value: \"male\" },\n                                    { name: \"Женский\", value: \"female\" }\n                                ]}\n                                value={data.sex}\n                                name=\"sex\"\n                                onChange={handleChange}\n                                label=\"Выберите ваш пол\"\n                            />\n                            <MultiSelectField\n                                defaultValue={data.qualities}\n                                options={qualitiesList}\n                                onChange={handleChange}\n                                name=\"qualities\"\n                                label=\"Выберите ваши интересы\"\n                            />\n                            <button\n                                type=\"submit\"\n                                disabled={!isValid}\n                                className=\"btn btn-primary w-100 mx-auto\"\n                            >\n                                Обновить\n                            </button>\n                        </form>\n                    ) : (\n                        \"Загрузка...\"\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EditUserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useHistory } from \"react-router\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUserData } from \"../../store/users\";\nconst UserCard = ({ user }) => {\n    const history = useHistory();\n\n    const currentUser = useSelector(getCurrentUserData());\n    const handleClick = () => {\n        history.push(history.location.pathname + \"/edit\");\n    };\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body\">\n                {currentUser._id === user._id && (\n                    <button\n                        className=\"position-absolute top-0 end-0 btn btn-sm btn-primary\"\n                        onClick={handleClick}\n                    >\n                        Редактировать <i className=\"bi bi-gear\"></i>\n                    </button>\n                )}\n\n                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\n                    <img\n                        src={user.image}\n                        className=\"rounded-circle\"\n                        width=\"150\"\n                    />\n                    <div className=\"mt-3\">\n                        <h4>{user.name}</h4>\n                        <p className=\"text-secondary mb-1\">\n                            {user.profession.name}\n                        </p>\n                        <div className=\"text-muted\">\n                            <i\n                                className=\"bi bi-caret-down-fill text-primary\"\n                                role=\"button\"\n                            ></i>\n                            <i\n                                className=\"bi bi-caret-up text-secondary\"\n                                role=\"button\"\n                            ></i>\n                            <span className=\"ms-2\">{user.rate}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nUserCard.propTypes = {\n    user: PropTypes.object\n};\n\nexport default UserCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst Quality = ({ _id, color, name }) => {\n    return (\n        <span className={\"badge m-1 bg-\" + color} key={_id}>\n            {name}\n        </span>\n    );\n    // return \"something\";\n};\nQuality.propTypes = {\n    _id: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    name: PropTypes.string\n};\n\nexport default Quality;\n","import Qualities from \"./qualitiesList\";\nexport default Qualities;\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Quality from \"./quality\";\nimport {\n    getQualitiesLoadingStatus,\n    getQulitiesByIds,\n    loadQualitiesList\n} from \"../../../store/qualities\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst QualitiesList = ({ qualities }) => {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(getQualitiesLoadingStatus());\n    const qualitiesList = useSelector(getQulitiesByIds(qualities));\n    useEffect(() => {\n        dispatch(loadQualitiesList());\n    }, []);\n\n    if (isLoading) return \"Загрузка...\";\n\n    return (\n        <>\n            {qualitiesList.map((qual) => (\n                <Quality key={qual._id} {...qual} />\n            ))}\n        </>\n    );\n};\n\nQualitiesList.propTypes = {\n    qualities: PropTypes.array\n};\n\nexport default QualitiesList;\n","import React from \"react\";\nimport Qualities from \"./qualities\";\nimport PropTypes from \"prop-types\";\n\nconst QualitiesCard = ({ data }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Интересы</span>\n                </h5>\n                <p className=\"card-text\">\n                    <Qualities qualities={data} />\n                </p>\n            </div>\n        </div>\n    );\n};\nQualitiesCard.propTypes = {\n    data: PropTypes.array\n};\n\nexport default QualitiesCard;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst MeetingsCard = ({ value }) => {\n    return (\n        <div className=\"card mb-3\">\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\n                <h5 className=\"card-title\">\n                    <span>Завершенных встреч</span>\n                </h5>\n\n                <h1 className=\"display-1\">{value}</h1>\n            </div>\n        </div>\n    );\n};\nMeetingsCard.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nexport default MeetingsCard;\n","export function displayDate(data) {\n    const date = new Date(parseInt(data));\n    const dateNow = new Date();\n    const yearDif = dateNow.getFullYear() - date.getFullYear();\n    if (yearDif === 0) {\n        const dayDif = dateNow.getDay() - date.getDay();\n        if (dayDif === 0) {\n            const hourDif = dateNow.getHours() - date.getHours();\n            if (hourDif === 0) {\n                const minutesDif = dateNow.getMinutes() - date.getMinutes();\n\n                if (minutesDif >= 0 && minutesDif < 5) return \"1 минуту назад\";\n                if (minutesDif >= 5 && minutesDif < 10) return \"5 минут назад\";\n                if (minutesDif >= 10 && minutesDif < 30) {\n                    return \"10 минут назад\";\n                }\n                return \"30 минут назад\";\n            }\n            return `${date.getHours()}:${date.getMinutes()}`;\n        }\n\n        return `${date.getDay()} ${date.toLocaleString(\"default\", {\n            month: \"long\"\n        })}`;\n    }\n    return (\n        date.getFullYear() + \".\" + (date.getMonth() + 1) + \"_\" + date.getDate()\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport { getCurrentUserId, getUserById } from \"../../../store/users\";\nimport { useSelector } from \"react-redux\";\nconst Comment = ({ data, created_at: created, _id: id, userId, onRemove }) => {\n    const currentUserId = useSelector(getCurrentUserId());\n    const user = useSelector(getUserById(userId));\n\n    return (\n        <div className=\"bg-light card-body  mb-3\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div className=\"d-flex flex-start \">\n                        <img\n                            src={user?.image}\n                            className=\"rounded-circle shadow-1-strong me-3\"\n                            alt=\"avatar\"\n                            width=\"65\"\n                            height=\"65\"\n                        />\n                        <div className=\"flex-grow-1 flex-shrink-1\">\n                            <div className=\"mb-4\">\n                                <div className=\"d-flex justify-content-between align-items-center\">\n                                    <p className=\"mb-1 \">\n                                        {user && user.name}{\" \"}\n                                        <span className=\"small\">\n                                            - {displayDate(created)}\n                                        </span>\n                                    </p>\n                                    {currentUserId === userId && (\n                                        <button\n                                            className=\"btn btn-sm text-primary d-flex align-items-center\"\n                                            onClick={() => onRemove(id)}\n                                        >\n                                            <i className=\"bi bi-x-lg\"></i>\n                                        </button>\n                                    )}\n                                </div>\n                                <p className=\"small mb-0\">{data.content}</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\nComment.propTypes = {\n    data: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    userId: PropTypes.string,\n    onRemove: PropTypes.func,\n    _id: PropTypes.string\n};\n\nexport default Comment;\n","import React from \"react\";\n\nimport Comment from \"./comment\";\nimport PropTypes from \"prop-types\";\nconst CommentsList = ({ comments, onRemove }) => {\n    return comments.map((comment) => (\n        <Comment key={comment._id} {...comment} onRemove={onRemove} />\n    ));\n};\nCommentsList.propTypes = {\n    comment: PropTypes.array,\n    onRemove: PropTypes.func\n};\n\nexport default CommentsList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\n    const handleChange = ({ target }) => {\n        onChange({ name: target.name, value: target.value });\n    };\n    const getInputClasses = () => {\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\n    };\n\n    return (\n        <div className=\"mb-4\">\n            <label htmlFor={name}> {label}</label>\n            <div className=\"input-group has-validation\">\n                <textarea\n                    id={name}\n                    name={name}\n                    value={value}\n                    onChange={handleChange}\n                    className={getInputClasses()}\n                />\n\n                {error && <div className=\"invalid-feedback \">{error}</div>}\n            </div>\n        </div>\n    );\n};\nTextAreaField.defaultProps = {\n    type: \"text\"\n};\nTextAreaField.propTypes = {\n    label: PropTypes.string,\n    type: PropTypes.string,\n    name: PropTypes.string,\n    value: PropTypes.string,\n    onChange: PropTypes.func,\n    error: PropTypes.string\n};\n\nexport default TextAreaField;\n","import React, { useState } from \"react\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/ validator\";\nimport PropTypes from \"prop-types\";\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const [data, setData] = useState({});\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfog = {\n        content: {\n            isRequired: {\n                message: \"Сообщение не может быть пустым\"\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n\n    const clearForm = () => {\n        setData({});\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(data);\n        clearForm();\n    };\n\n    return (\n        <div>\n            <h2>Новый комментарий</h2>\n            <form onSubmit={handleSubmit}>\n                <TextAreaField\n                    value={data.content || \"\"}\n                    onChange={handleChange}\n                    name=\"content\"\n                    label=\"Сообщение\"\n                    error={errors.content}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-primary\">Опубликовать</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n","import CommentsList from \"./commentsList\";\nimport AddCommentForm from \"./addCommentForm\";\nexport default CommentsList;\nexport { AddCommentForm };\n","import httpService from \"./http.service\";\nconst commentEndpoint = \"comment/\";\n\nconst commentService = {\n    createComment: async (payload) => {\n        const { data } = await httpService.put(\n            commentEndpoint + payload._id,\n            payload\n        );\n        return data;\n    },\n    getComments: async (pageId) => {\n        const { data } = await httpService.get(commentEndpoint, {\n            params: {\n                orderBy: '\"pageId\"',\n                equalTo: `\"${pageId}\"`\n            }\n        });\n        return data;\n    },\n    removeComment: async (commentId) => {\n        const { data } = await httpService.delete(commentEndpoint + commentId);\n        return data;\n    }\n};\nexport default commentService;\n","import { createAction, createSlice } from \"@reduxjs/toolkit\";\nimport commentService from \"../services/comment.service\";\nimport { getCurrentUserId } from \"./users\";\nimport { nanoid } from \"nanoid\";\nconst commentsSlice = createSlice({\n    name: \"comments\",\n    initialState: {\n        entities: null,\n        isLoading: true,\n        error: null\n    },\n    reducers: {\n        commentsRequested: (state) => {\n            state.isLoading = true;\n        },\n        commentsReceved: (state, action) => {\n            state.entities = action.payload;\n            state.isLoading = false;\n        },\n        commentsRequestFiled: (state, action) => {\n            state.error = action.payload;\n            state.isLoading = false;\n        },\n        commetnCreated: (state, action) => {\n            state.entities.push(action.payload);\n        },\n        commentRemoved: (state, action) => {\n            state.entities = state.entities.filter(\n                (c) => c._id !== action.payload\n            );\n        }\n    }\n});\n\nconst { reducer: commentsReducer, actions } = commentsSlice;\nconst {\n    commentsRequested,\n    commentsReceved,\n    commentsRequestFiled,\n    commetnCreated,\n    commentRemoved\n} = actions;\n\nconst addCommentRequested = createAction(\"comments/addCommentRequested\");\nconst removeCommentRequested = createAction(\"comments/removeCommentRequested\");\n\nexport const loadCommentsList = (userId) => async (dispatch) => {\n    dispatch(commentsRequested());\n    try {\n        const { content } = await commentService.getComments(userId);\n        dispatch(commentsReceved(content));\n    } catch (error) {\n        dispatch(commentsRequestFiled(error.message));\n    }\n};\nexport const createComment = (payload) => async (dispatch, getState) => {\n    dispatch(addCommentRequested());\n    const comment = {\n        ...payload,\n        _id: nanoid(),\n        created_at: Date.now(),\n        userId: getCurrentUserId()(getState())\n    };\n    try {\n        const { content } = await commentService.createComment(comment);\n        dispatch(commetnCreated(content));\n    } catch (error) {\n        dispatch(commentsRequestFiled(error.message));\n    }\n};\nexport const removeComment = (commentId) => async (dispatch) => {\n    dispatch(removeCommentRequested());\n    try {\n        const { content } = await commentService.removeComment(commentId);\n        if (content === null) {\n            dispatch(commentRemoved(commentId));\n        }\n    } catch (error) {\n        dispatch(commentsRequestFiled(error.message));\n    }\n};\n\nexport const getComments = () => (state) => state.comments.entities;\nexport const getCommentsLoadingStatus = () => (state) =>\n    state.comments.isLoading;\n\nexport default commentsReducer;\n","import { orderBy } from \"lodash\";\nimport React, { useEffect } from \"react\";\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\nimport {\n    createComment,\n    getComments,\n    getCommentsLoadingStatus,\n    loadCommentsList,\n    removeComment\n} from \"../../store/comments\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\n\nconst Comments = () => {\n    const { userId } = useParams();\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(loadCommentsList(userId));\n    }, [userId]);\n    const isLoading = useSelector(getCommentsLoadingStatus());\n\n    const comments = useSelector(getComments());\n    const handleSubmit = (data) => {\n        dispatch(createComment({ data, pageId: userId }));\n    };\n    const handleRemoveComment = (id) => {\n        dispatch(removeComment(id));\n    };\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\n    return (\n        <>\n            <div className=\"card mb-2\">\n                <div className=\"card-body \">\n                    <AddCommentForm onSubmit={handleSubmit} />\n                </div>\n            </div>\n            {sortedComments.length > 0 && (\n                <div className=\"card mb-3\">\n                    <div className=\"card-body \">\n                        <h2>Сообщения</h2>\n                        <hr />\n                        {!isLoading ? (\n                            <CommentsList\n                                comments={sortedComments}\n                                onRemove={handleRemoveComment}\n                            />\n                        ) : (\n                            \"Загрузка...\"\n                        )}\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n\nexport default Comments;\n","import UserPage from \"./userPage\";\nexport default UserPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport UserCard from \"../../ui/userCard\";\nimport QualitiesCard from \"../../ui/qualitiesCard\";\nimport MeetingsCard from \"../../ui/meetingsCard\";\nimport Comments from \"../../ui/comments\";\n\nimport { useSelector } from \"react-redux\";\nimport { getUserById } from \"../../../store/users\";\n\nconst UserPage = ({ userId }) => {\n    const user = useSelector(getUserById(userId));\n\n    if (user) {\n        return (\n            <div className=\"container\">\n                <div className=\"row gutters-sm\">\n                    <div className=\"col-md-4 mb-3\">\n                        <UserCard user={user} />\n                        <QualitiesCard data={user.qualities} />\n                        <MeetingsCard value={user.completedMeetings} />\n                    </div>\n                    <div className=\"col-md-8\">\n                        <Comments />\n                    </div>\n                </div>\n            </div>\n        );\n    } else {\n        return <h1>Загрузка</h1>;\n    }\n};\n\nUserPage.propTypes = {\n    userId: PropTypes.string.isRequired\n};\n\nexport default UserPage;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n    const startIndex = (pageNumber - 1) * pageSize;\n    return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\n    const pagesCount = Math.ceil(itemsCount / pageSize);\n    const pages = _.range(1, pagesCount + 1);\n\n    if (pagesCount === 1) return null;\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map((page) => (\n                    <li\n                        key={page}\n                        className={\n                            \"page-item \" +\n                            (page === currentPage ? \"active\" : \"\")\n                        }\n                    >\n                        <a\n                            className=\"page-link\"\n                            onClick={() => {\n                                onPageChange(page);\n                            }}\n                        >\n                            {page}\n                        </a>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    );\n};\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst GroupList = ({\n    items,\n    valueProperty,\n    contentProperty,\n    onItemSelect,\n    selectedItem\n}) => {\n    if (!Array.isArray(items)) {\n        return (\n            <ul className=\"list-group text-center\">\n                {Object.keys(items).map((item) => (\n                    <li\n                        key={items[item][valueProperty]}\n                        className={\n                            \"list-group-item\" +\n                            (items[item] === selectedItem ? \" active\" : \"\")\n                        }\n                        onClick={() => onItemSelect(items[item])}\n                        role=\"button\"\n                    >\n                        {items[item][contentProperty]}\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n    return (\n        <ul className=\"list-group text-center\">\n            {items.map((item) => (\n                <li\n                    key={item[valueProperty]}\n                    className={\n                        \"list-group-item\" +\n                        (item === selectedItem ? \" active\" : \"\")\n                    }\n                    onClick={() => onItemSelect(item)}\n                    role=\"button\"\n                >\n                    {item[contentProperty]}\n                </li>\n            ))}\n        </ul>\n    );\n};\nGroupList.defaultProps = {\n    valueProperty: \"_id\",\n    contentProperty: \"name\"\n};\nGroupList.propTypes = {\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    valueProperty: PropTypes.string.isRequired,\n    contentProperty: PropTypes.string.isRequired,\n    onItemSelect: PropTypes.func,\n    selectedItem: PropTypes.object\n};\n\nexport default GroupList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst SearchStatus = ({ length }) => {\n    const renderPhrase = (number) => {\n        const lastOne = Number(number.toString().slice(-1));\n        if (number > 4 && number < 15) {\n            return \"человек встретятся\";\n        }\n        if (lastOne === 1) return \"человек встретится\";\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека встретятся\";\n        return \"человек встретится\";\n    };\n    return (\n        <h2 className=\"text-center\">\n            <span\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\n            >\n                {length > 0\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\n                    : \"Никто с тобой не встретится\"}\n            </span>\n        </h2>\n    );\n};\nSearchStatus.propTypes = {\n    length: PropTypes.number\n};\n\nexport default SearchStatus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst BookMark = ({ status, ...rest }) => {\n    return (\n        <button className=\"btn btn-success\" {...rest}>\n            <i className={\"bi bi-star\" + (status ? \"-fill\" : \"\")}></i>\n        </button>\n    );\n};\n\nBookMark.propTypes = {\n    status: PropTypes.bool\n};\n\nexport default BookMark;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst TableBody = ({ data, columns }) => {\n    const renderContent = (item, column) => {\n        if (columns[column].component) {\n            const component = columns[column].component;\n            if (typeof component === \"function\") {\n                return component(item);\n            }\n            return component;\n        }\n        return _.get(item, columns[column].path);\n    };\n    return (\n        <tbody>\n            {data.map((item) => (\n                <tr key={item._id}>\n                    {Object.keys(columns).map((column) => (\n                        <td key={column}>{renderContent(item, column)}</td>\n                    ))}\n                </tr>\n            ))}\n        </tbody>\n    );\n};\n\nTableBody.propTypes = {\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableBody;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\n    const handleSort = (item) => {\n        if (selectedSort.path === item) {\n            onSort({\n                ...selectedSort,\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\n            });\n        } else {\n            onSort({ path: item, order: \"asc\" });\n        }\n    };\n    const rendeSortArrow = (selectedSort, currentPath) => {\n        if (selectedSort.path === currentPath) {\n            if (selectedSort.order === \"asc\") {\n                return <i className=\"bi bi-caret-down-fill\"></i>;\n            } else {\n                return <i className=\"bi bi-caret-up-fill\"></i>;\n            }\n        }\n        return null;\n    };\n\n    return (\n        <thead className=\"table-dark\">\n            <tr>\n                {Object.keys(columns).map((column) => (\n                    <th\n                        key={column}\n                        onClick={\n                            columns[column].path\n                                ? () => handleSort(columns[column].path)\n                                : undefined\n                        }\n                        {...{ role: columns[column].path && \"button\" }}\n                        scope=\"col\"\n                    >\n                        {columns[column].name}{\" \"}\n                        {rendeSortArrow(selectedSort, columns[column].path)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\nTableHeader.propTypes = {\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    columns: PropTypes.object.isRequired\n};\n\nexport default TableHeader;\n","import Table from \"./table\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nexport default Table;\n\nexport { TableBody, TableHeader };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableBody from \"./tableBody\";\nimport TableHeader from \"./tableHeader\";\n\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\n    return (\n        <div className=\"table-responsive-lg\">\n            <table className=\"table table-hover\">\n                {children || (\n                    <>\n                        <TableHeader {...{ onSort, selectedSort, columns }} />\n                        <TableBody {...{ columns, data }} />\n                    </>\n                )}\n            </table>\n        </div>\n    );\n};\nTable.propTypes = {\n    onSort: PropTypes.func,\n    selectedSort: PropTypes.object,\n    columns: PropTypes.object,\n    data: PropTypes.array,\n    children: PropTypes.array\n};\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport {\n    getProfessionbyId,\n    getProfessionsLoadingStatus\n} from \"../../store/professions\";\n\nconst Profession = ({ id }) => {\n    const isLoading = useSelector(getProfessionsLoadingStatus());\n    const prof = useSelector(getProfessionbyId(id));\n    if (!isLoading) {\n        return <p>{prof?.name}</p>;\n    } else return \"Загрузка...\";\n};\nProfession.propTypes = {\n    id: PropTypes.string\n};\nexport default Profession;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport BookMark from \"../common/bookmark\";\nimport Qualities from \"./qualities\";\nimport Table from \"../common/table\";\nimport { Link } from \"react-router-dom\";\nimport Profession from \"./profession\";\n\nconst UserTable = ({\n    users,\n    onSort,\n    selectedSort,\n    onToggleBookMark,\n    ...rest\n}) => {\n    const columns = {\n        name: {\n            path: \"name\",\n            name: \"Имя\",\n            component: (user) => (\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\n            )\n        },\n        qualities: {\n            name: \"Интересы\",\n            component: (user) => <Qualities qualities={user.qualities} />\n        },\n        professions: {\n            name: \"Профессия\",\n            component: (user) => <Profession id={user.profession} />\n        },\n        completedMeetings: {\n            path: \"completedMeetings\",\n            name: \"Встретился, раз\"\n        },\n        rate: { path: \"rate\", name: \"Рейтинг\" },\n        bookmark: {\n            path: \"bookmark\",\n            name: \"Избранное\",\n            component: (user) => (\n                <BookMark\n                    status={user.bookmark}\n                    onClick={() => onToggleBookMark(user._id)}\n                />\n            )\n        }\n    };\n    return (\n        <Table\n            onSort={onSort}\n            selectedSort={selectedSort}\n            columns={columns}\n            data={users}\n        />\n    );\n};\n\nUserTable.propTypes = {\n    users: PropTypes.array.isRequired,\n    onSort: PropTypes.func.isRequired,\n    selectedSort: PropTypes.object.isRequired,\n    onToggleBookMark: PropTypes.func.isRequired\n};\n\nexport default UserTable;\n","import UsersListPage from \"./usersListPage\";\nexport default UsersListPage;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { paginate } from \"../../../utils/paginate\";\nimport Pagination from \"../../common/pagination\";\nimport GroupList from \"../../common/groupList\";\nimport SearchStatus from \"../../ui/searchStatus\";\nimport UserTable from \"../../ui/usersTable\";\nimport _ from \"lodash\";\nimport {\n    getProfessions,\n    getProfessionsLoadingStatus\n} from \"../../../store/professions\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentUserId, getUsersList } from \"../../../store/users\";\nconst UsersListPage = () => {\n    const users = useSelector(getUsersList());\n    const currentUserId = useSelector(getCurrentUserId());\n\n    const professions = useSelector(getProfessions());\n    const professionsLoading = useSelector(getProfessionsLoadingStatus());\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    const [selectedProf, setSelectedProf] = useState();\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\n    const pageSize = 8;\n\n    const handleDelete = (userId) => {\n        console.log(\"delete user\");\n        // setUsers(users.filter((user) => user._id !== userId));\n    };\n    const handleToggleBookMark = (id) => {\n        const newArray = users.map((user) => {\n            if (user._id === id) {\n                return { ...user, bookmark: !user.bookmark };\n            }\n            return user;\n        });\n        // setUsers(newArray);\n        console.log(newArray);\n    };\n\n    useEffect(() => {\n        setCurrentPage(1);\n    }, [selectedProf, searchQuery]);\n\n    const handleProfessionSelect = (item) => {\n        if (searchQuery !== \"\") setSearchQuery(\"\");\n        setSelectedProf(item);\n    };\n    const handleSearchQuery = ({ target }) => {\n        setSelectedProf(undefined);\n        setSearchQuery(target.value);\n    };\n\n    const handlePageChange = (pageIndex) => {\n        setCurrentPage(pageIndex);\n    };\n    const handleSort = (item) => {\n        setSortBy(item);\n    };\n\n    function filterUsers(data) {\n        const filteredUsers = searchQuery\n            ? data.filter(\n                  (user) =>\n                      user.name\n                          .toLowerCase()\n                          .indexOf(searchQuery.toLowerCase()) !== -1\n              )\n            : selectedProf\n            ? data.filter((user) => user.profession === selectedProf._id)\n            : data;\n        return filteredUsers.filter((u) => u._id !== currentUserId);\n    }\n    const filteredUsers = filterUsers(users);\n    const count = filteredUsers.length;\n    const sortedUsers = _.orderBy(filteredUsers, [sortBy.path], [sortBy.order]);\n    const usersCrop = paginate(sortedUsers, currentPage, pageSize);\n    const clearFilter = () => {\n        setSelectedProf();\n    };\n\n    return (\n        <div className=\"d-flex justify-content-center container\">\n            {professions && !professionsLoading && (\n                <div className=\"d-flex flex-column justify-content-center flex-shrink-0 p-3 card\">\n                    <GroupList\n                        selectedItem={selectedProf}\n                        items={professions}\n                        onItemSelect={handleProfessionSelect}\n                    />\n                    <button\n                        className=\"btn btn-secondary mt-2\"\n                        onClick={clearFilter}\n                    >\n                        Очиститть\n                    </button>\n                </div>\n            )}\n            <div className=\"d-flex flex-column container\">\n                <SearchStatus length={count} />\n                <input\n                    className=\"input-search\"\n                    type=\"text\"\n                    name=\"searchQuery\"\n                    placeholder=\"Найти...\"\n                    onChange={handleSearchQuery}\n                    value={searchQuery}\n                />\n                {count > 0 && (\n                    <UserTable\n                        users={usersCrop}\n                        onSort={handleSort}\n                        selectedSort={sortBy}\n                        onDelete={handleDelete}\n                        onToggleBookMark={handleToggleBookMark}\n                    />\n                )}\n                <div className=\"d-flex justify-content-center\">\n                    <Pagination\n                        itemsCount={count}\n                        pageSize={pageSize}\n                        currentPage={currentPage}\n                        onPageChange={handlePageChange}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\nUsersListPage.propTypes = {\n    users: PropTypes.array\n};\n\nexport default UsersListPage;\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDataStatus, loadUsersList } from \"../../../store/users\";\n\nconst UsersLoader = ({ children }) => {\n    const dataStatus = useSelector(getDataStatus());\n    const dispatch = useDispatch();\n    useEffect(() => {\n        if (!dataStatus) dispatch(loadUsersList());\n    }, []);\n    if (!dataStatus) return \"Loading\";\n    return children;\n};\n\nUsersLoader.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\nexport default UsersLoader;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport EditUserPage from \"../components/page/editUserPage\";\nimport UserPage from \"../components/page/userPage\";\nimport UsersListPage from \"../components/page/usersListPage\";\nimport UsersLoader from \"../components/ui/hoc/usersLoader\";\n\nimport { getCurrentUserId } from \"../store/users\";\nconst Users = () => {\n    const params = useParams();\n    const { userId, edit } = params;\n    const currentUserId = useSelector(getCurrentUserId());\n\n    return (\n        <>\n            <UsersLoader>\n                {userId ? (\n                    edit ? (\n                        userId === currentUserId ? (\n                            <EditUserPage />\n                        ) : (\n                            <Redirect to={`/users/${currentUserId}/edit`} />\n                        )\n                    ) : (\n                        <UserPage userId={userId} />\n                    )\n                ) : (\n                    <UsersListPage />\n                )}\n            </UsersLoader>\n        </>\n    );\n};\n\nexport default Users;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\n    const handleChange = () => {\n        onChange({ name: name, value: !value });\n    };\n    const getInputClasses = () => {\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\n    };\n    return (\n        <div className=\"form-check mb-4\">\n            <input\n                className={getInputClasses()}\n                type=\"checkbox\"\n                value=\"\"\n                id={name}\n                onChange={handleChange}\n                checked={value}\n            />\n            <label className=\"form-check-label \" htmlFor={name}>\n                {children}\n            </label>\n            {error && <div className=\"invalid-feedback\">{error}</div>}\n        </div>\n    );\n};\nCheckBoxField.propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.bool,\n    onChange: PropTypes.func,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ]),\n    error: PropTypes.string\n};\n\nexport default CheckBoxField;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/ validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAuthErrors, login } from \"../../store/users\";\n\nconst LoginForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const loginError = useSelector(getAuthErrors());\n    const history = useHistory();\n    const dispath = useDispatch();\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const redirect = history.location.state\n            ? history.location.state.from.pathname\n            : \"/\";\n\n        dispath(login({ payload: data, redirect }));\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            {loginError && <p className=\"text-danger\">{loginError}</p>}\n\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                Отправить\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n","import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/ validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radio.Field\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getQualities } from \"../../store/qualities\";\nimport { getProfessions } from \"../../store/professions\";\nimport { signUp } from \"../../store/users\";\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        profession: \"\",\n        sex: \"Мужской\",\n        name: \"\",\n        qualities: [],\n        licence: false\n    });\n\n    const qualities = useSelector(getQualities());\n    const qualitiesList = qualities.map((q) => ({\n        label: q.name,\n        value: q._id\n    }));\n    const professions = useSelector(getProfessions());\n\n    const professionsList = professions.map((p) => ({\n        name: p.name,\n        value: p._id\n    }));\n\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfog = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        name: {\n            isRequired: {\n                message: \"Имя обязательно для заполнения\"\n            },\n            min: {\n                message: \"Имя должено состаять миниму из 3 символов\",\n                value: 3\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состаять миниму из 8 символов\",\n                value: 8\n            }\n        },\n        profession: {\n            isRequired: {\n                message: \"Обязательно выберите вашу профессию\"\n            }\n        },\n        licence: {\n            isRequired: {\n                message:\n                    \"Вы не можете использовать наш сервис без подтреврждения лицензионного соглашения\"\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfog);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        const newData = {\n            ...data,\n            qualities: data.qualities.map((q) => q.value)\n        };\n        dispatch(signUp(newData));\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Имя\"\n                name=\"name\"\n                value={data.name}\n                onChange={handleChange}\n                error={errors.name}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <SelectField\n                label=\"Выберите свою профессию\"\n                defaultOption=\"Выбрать...\"\n                name=\"profession\"\n                options={professionsList}\n                onChange={handleChange}\n                value={data.profession}\n                error={errors.profession}\n            />\n            <RadioField\n                options={[\n                    { name: \"Мужской\", value: \"male\" },\n                    { name: \"Женский\", value: \"female\" }\n                ]}\n                value={data.sex}\n                name=\"sex\"\n                onChange={handleChange}\n                label=\"Выберите ваш пол\"\n            />\n            <MultiSelectField\n                options={qualitiesList}\n                onChange={handleChange}\n                name=\"qualities\"\n                label=\"Выберите ваши интересы\"\n            />\n            <CheckBoxField\n                value={data.licence}\n                onChange={handleChange}\n                name=\"licence\"\n                error={errors.licence}\n            >\n                Подтвердить <a>лицензионное соглашение</a>\n            </CheckBoxField>\n            <button\n                type=\"submit\"\n                disabled={!isValid}\n                className=\"btn btn-primary w-100 mx-auto\"\n            >\n                Отправить\n            </button>\n        </form>\n    );\n};\n\nexport default RegisterForm;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport LoginForm from \"../components/ui/loginForm\";\nimport RegisterForm from \"../components/ui/registerForm\";\n\nconst Login = () => {\n    const { type } = useParams();\n    const [formType, setFormType] = useState(\n        type === \"register\" ? type : \"login\"\n    );\n    const toggleFormType = (params) => {\n        setFormType((prevState) =>\n            prevState === \"register\" ? \"login\" : \"register\"\n        );\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\n                    {formType === \"register\" ? (\n                        <>\n                            <h3 className=\"mb-4\">Зарегистрироваться</h3>\n                            <RegisterForm />\n                            <p>\n                                Уже есть аккаунт?{\" \"}\n                                <a\n                                    role=\"button\"\n                                    className=\"link\"\n                                    onClick={toggleFormType}\n                                >\n                                    {\" \"}\n                                    Войти\n                                </a>\n                            </p>\n                        </>\n                    ) : (\n                        <>\n                            <h3 className=\"mb-4\">Вход</h3>\n                            <LoginForm />\n                            <p className=\"mt-4\">\n                                Ещё нет аккаунта?{\" \"}\n                                <a\n                                    role=\"button\"\n                                    className=\"link\"\n                                    onClick={toggleFormType}\n                                >\n                                    {\" \"}\n                                    Регистрация\n                                </a>\n                            </p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Login;\n","import React from \"react\";\n// import useMockData from \"../utils/mockData\";\n\nconst Main = () => {\n    // const { error, initialize, progress, status } = useMockData();\n    // const handleClick = () => {\n    //     initialize();\n    // };\n    return (\n        <div className=\"container mt-5 bg-primary card\">\n            {/* <h1> Main Page</h1>\n            <h3>Инициализация данных в FireBase</h3>\n            <ul>\n                <li>Status:{status}</li>\n                <li>Progress: {progress}%</li>\n                {error && <li>error: {error}</li>}\n            </ul>\n            <button className=\"btn btn-primary\" onClick={handleClick}>\n                {\" \"}\n                Инициализировать\n            </button> */}\n            <h1 className=\"d-flex text-center text-white p-5\">\n                Веб-приложение для организации культурно-досуговых мероприятий и\n                встреч с друзьями{\" \"}\n            </h1>\n        </div>\n    );\n};\n\nexport default Main;\n","export const professionsObject = {\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n};\nexport const professions = [\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\n];\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(professionsObject);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","import { professionsObject as professions } from \"./professions.api\";\nconst qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471103\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\n\nconst users = [\n    {\n        _id: \"67rdca3eeb7f6fgeed471815\",\n        name: \"Джон Дориан\",\n        profession: professions.doctor,\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\n        completedMeetings: 36,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471816\",\n        name: \"Кокс\",\n        profession: professions.doctor,\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\n        completedMeetings: 15,\n        rate: 2.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471817\",\n        name: \"Боб Келсо\",\n        profession: professions.doctor,\n        qualities: [qualities.buller],\n        completedMeetings: 247,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471818\",\n        name: \"Рэйчел Грин\",\n        profession: professions.waiter,\n        qualities: [qualities.uncertain],\n        completedMeetings: 148,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471819\",\n        name: \"Шелдон Купер\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 37,\n        rate: 4.6,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471820\",\n        name: \"Леонард Хофстедтер\",\n        profession: professions.physics,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 147,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471821\",\n        name: \"Говард Воловиц\",\n        profession: professions.engineer,\n        qualities: [qualities.strange, qualities.tedious],\n        completedMeetings: 72,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471822\",\n        name: \"Никола Тесла\",\n        profession: professions.engineer,\n        qualities: [qualities.handsome],\n        completedMeetings: 72,\n        rate: 5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471823\",\n        name: \"Моника Геллер\",\n        profession: professions.cook,\n        qualities: [qualities.strange, qualities.uncertain],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed471824\",\n        name: \"Рататуй\",\n        profession: professions.cook,\n        qualities: [qualities.handsome, qualities.buller],\n        completedMeetings: 17,\n        rate: 4.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181f\",\n        name: \"Джоуи Триббиани\",\n        profession: professions.actor,\n        qualities: [qualities.uncertain, qualities.strange],\n        completedMeetings: 434,\n        rate: 3.5,\n        bookmark: false\n    },\n    {\n        _id: \"67rdca3eeb7f6fgeed47181r\",\n        name: \"Брэд Питт\",\n        profession: professions.actor,\n        qualities: [qualities.handsome],\n        completedMeetings: 434,\n        rate: 5,\n        bookmark: false\n    }\n];\nif (!localStorage.getItem(\"users\")) {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n}\n\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(JSON.parse(localStorage.getItem(\"users\")));\n        }, 2000);\n    });\nconst update = (id, data) =>\n    new Promise((resolve) => {\n        const users = JSON.parse(localStorage.getItem(\"users\"));\n        const userIndex = users.findIndex((u) => u._id === id);\n        users[userIndex] = { ...users[userIndex], ...data };\n        localStorage.setItem(\"users\", JSON.stringify(users));\n        resolve(users[userIndex]);\n    });\n\nconst getById = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"users\")).find(\n                    (user) => user._id === id\n                )\n            );\n        }, 1000);\n    });\nexport default {\n    fetchAll,\n    getById,\n    update\n};\n","const qualities = {\n    tedious: {\n        _id: \"67rdca3eeb7f6fgeed471198\",\n        name: \"Нудила\",\n        color: \"primary\"\n    },\n    strange: {\n        _id: \"67rdca3eeb7f6fgeed471100\",\n        name: \"Странный\",\n        color: \"secondary\"\n    },\n    buller: {\n        _id: \"67rdca3eeb7f6fgeed4711012\",\n        name: \"Троль\",\n        color: \"success\"\n    },\n    alcoholic: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Алкоголик\",\n        color: \"danger\"\n    },\n    handsome: {\n        _id: \"67rdca3eeb7f6fgeed471101\",\n        name: \"Красавчик\",\n        color: \"info\"\n    },\n    uncertain: {\n        _id: \"67rdca3eeb7f6fgeed471102\",\n        name: \"Неуверенный\",\n        color: \"dark\"\n    }\n};\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(qualities);\n        }, 2000);\n    });\n\nexport default {\n    fetchAll\n};\n","const comments = [\n    {\n        _id: \"67rdca3eeb7f6fg\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor\",\n        created_at: \"1633576399367\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdasd\",\n        pageId: \"67rdca3eeb7f6fgeed471815\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    },\n    {\n        _id: \"67rdca3eeb7f6fgdaasd\",\n        pageId: \"67rdca3eeb7f6fgeed471817\",\n        userId: \"67rdca3eeb7f6fgeed471815\",\n        content: \"Lorem ipsum dolor and etc\",\n        created_at: \"1633573058520\"\n    }\n];\nif (!localStorage.getItem(\"comments\")) {\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\n}\nconst fetchAll = () =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(comments);\n        }, 200);\n    });\n\nconst fetchCommentsForUser = (userId) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            resolve(\n                JSON.parse(localStorage.getItem(\"comments\")).filter(\n                    (c) => c.pageId === userId\n                )\n            );\n        }, 200);\n    });\nconst add = (data) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComment = {\n                ...data,\n                created_at: Date.now(),\n                _id: Math.random().toString(36).substr(2, 9)\n            };\n            comments.push(newComment);\n            localStorage.setItem(\"comments\", JSON.stringify(comments));\n            resolve(newComment);\n        }, 200);\n    });\n\nconst remove = (id) =>\n    new Promise((resolve) => {\n        window.setTimeout(function () {\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\n            const newComments = comments.filter((x) => x._id !== id);\n            console.log(id);\n            console.log(newComments);\n            localStorage.setItem(\"comments\", JSON.stringify(newComments));\n            resolve(id);\n        }, 200);\n    });\nexport default {\n    fetchAll,\n    fetchCommentsForUser,\n    add,\n    remove\n};\n","export const liguesObject = {\r\n    cinema: { _id: \"67rdca18\", name: \"Кино\" },\r\n    watch: { _id: \"67rdca20\", name: \"Спектакли\" },\r\n    events: { _id: \"67rdca21\", name: \"События\" },\r\n    concerts: { _id: \"67rdca22\", name: \"Концерты\" },\r\n    shows: { _id: \"67rdca23\", name: \"Выставки\" },\r\n    kids: { _id: \"67rdca24\", name: \"Для детей\" },\r\n    sport: { _id: \"67rdca25\", name: \"Спорт\" },\r\n    meetings: { _id: \"67rdca26\", name: \"Встречи\" }\r\n};\r\n\r\nexport const ligues = [\r\n    { _id: \"67rdca18\", name: \"Кино\" },\r\n    { _id: \"67rdca20\", name: \"Спектакли\" },\r\n    { _id: \"67rdca21\", name: \"События\" },\r\n    { _id: \"67rdca22\", name: \"Концерты\" },\r\n    { _id: \"67rdca23\", name: \"Выставки\" },\r\n    { _id: \"67rdca24\", name: \"Для детей\" },\r\n    { _id: \"67rdca25\", name: \"Спорт\" },\r\n    { _id: \"67rdca26\", name: \"Встречи\" }\r\n];\r\n\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            resolve(liguesObject);\r\n        }, 2000);\r\n    });\r\n\r\nexport default {\r\n    fetchAll\r\n};\r\n","import { liguesObject as ligues } from \"./ligues.api\";\r\n\r\nconst tags = {\r\n    forSports: { _id: \"67rdca188\", name: \"Спорт\", color: \"success\" },\r\n    forMusic: { _id: \"67rdca200\", name: \"Музыка\", color: \"info\" },\r\n    forGames: { _id: \"67rdca201\", name: \"Игры\", color: \"info\" },\r\n    forKids: { _id: \"67rdca202\", name: \"Детское\", color: \"info\" },\r\n    forMeetings: { _id: \"67rdca203\", name: \"Встречи\", color: \"primary\" }\r\n};\r\n\r\nconst articles = [\r\n    {\r\n        _id: \"67rdca1815\",\r\n        title: \"Музей елочных игрушек\",\r\n        text: \"В последние выходные октября Национальный исторический музей Республики Беларусь уже в седьмой раз открывает двери новогоднего выставочного проекта «Музей елочных игрушек»! Традиционно проект проходит совместно с Фабрикой елочных игрушек «ГРАЙ» («Ганарыся Рэчамі АЙчыны!»).<br/>Выставка – часть крупнейшей мировой коллекции елочных игрушек, которая ежегодно пополняется новыми уникальными предметами из разных стран. В «Музее елочных игрушек» каждый ребенок сможет окунуться в волшебную новогоднюю сказку, а взрослый – вернуться в далекое детство. Экспозиция расскажет историю производства стеклянных шаров и других украшений с середины XIX века до наших дней. Познакомит с традициями новогодних праздников, как европейских, так и экзотических стран (Конго, Перу, Индонезия, Новая Зеландия, Северная Корея). Любимые и знакомые большинству родителей новогодние игрушки советского периода позволят рассказать детям традиции новогодних праздников из своего детства. Одним из акцентов проекта будет традиционный миниатюрный интерактивный рождественский городок. Прогуливаясь вдоль витрин со старинными украшениями для елок, цветными шарами и хрупкими винтажными игрушками, гости музея почувствуют атмосферу и теплоту зимних праздников, вдохновятся на поиски необычных подарков для своих близких! Новогодняя игрушка – это не только праздничное украшение елки, но и предмет гордости коллекционеров. В последнее время появилась традиция – преподносить необычные елочные шары в качестве новогоднего подарка. В рамках проекта будет работать фирменный магазин фабрики «ГРАЙ». Приглашаем погрузиться в атмосферу волшебных зимних праздников!\",\r\n        ligue: ligues.kids,\r\n        tags: [tags.forKids],\r\n        date: \"с 28.10.2022 - 23.01.2023\",\r\n        update: \"Пн. - вс.: 11:00 - 19:00\",\r\n        image: \"https://ms1.relax.by/images/d4b21593f3f04b3b118e37d5e68927ff/thumb/w%3D400%2Ch%3D600%2Cq%3D90/afisha_event_photo/50/97/65/5097653883533eb729395491e4e82ea9.jpg\",\r\n        adress: \"ул. К. Маркса, 12\",\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca1816\",\r\n        title: \"Трансформационная психологическая игра\",\r\n        text: \"Цель игры:- посмотреть на свою жизнь со стороны;- совершить увлекательное путешествие в подсознание, выявив негативные шаблоны ума и модели поведения;- поверить в себя, подружиться с собой и изменить свои неэффективные стереотипные модели мышления и поведения;- выйти из жертвенной, детской позиции, взрастить внутреннего Взрослого, Сильную личность! Игроки заходят в игру, видя, какой опыт и историю они имеют. Что из этого является нужным, стоящим, а что лишь повторением детского решения... От чего можно отказаться и начать действовать по-другому. Осознают, что делать со своим состоянием, сложной проблемной ситуацией, как разрешить имеющийся конфликт и стать полноправным хозяином своей жизни!\",\r\n        ligue: ligues.events,\r\n        tags: [tags.forGames],\r\n        date: \"26.11.2022\",\r\n        update: \"14:00\",\r\n        image: \"https://ms1.relax.by/images/d4b21593f3f04b3b118e37d5e68927ff/thumb/w%3D400%2Ch%3D600%2Cq%3D90/afisha_event_photo/24/c3/11/24c311a5e9277d12ab5164a8a3259058.jpg\",\r\n        adress: \"ул. Притыцкого, 83\",\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca1817\",\r\n        title: \"Выставка «Экзотариум»\",\r\n        text: \"В экспозиции Вы сможете понаблюдать за обитателями джунглей и пустынь, полюбоваться их грациозностью, увидеть гибрида королевского питона и суматранского короткохвостого питона, полоза Байрда, носатого полоза Буланже, крысиного полоза, жабу-рогатку, амурского полоза, а так же многое другое. Разнообразные представители Азии, Африки и Америки – яркие и экзотические – поразят Вас своим видом и повадками. Выставка заинтересует как взрослых, так и детей. Для маленьких посетителей будет организована интерактивная зона.\",\r\n        ligue: ligues.kids,\r\n        tags: [tags.forKids],\r\n        date: \"с 28.10.2022 - 29.01.2023\",\r\n        update: \"Пн. - вс.: 11:00 - 19:00\",\r\n        image: \"https://ms1.relax.by/images/d4b21593f3f04b3b118e37d5e68927ff/thumb/w%3D400%2Ch%3D600%2Cq%3D90/afisha_event_photo/c5/3e/59/c53e5965ccdc58a04c4adefbf0c450a8.jpg\",\r\n        adress: \"ул. Богдановича, 9А\",\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca1818\",\r\n        title: \"Совместный поход на фильм - Ламборгини: Человек-легенда\",\r\n        text: \"История самого дерзкого стартапа в мире суперкаров. Путь страсти, проб и ошибок Ферруччо Ламборгини и его превращения из сына фермера, мастерившего тракторы, в создателя легендарной машины, бросившего вызов самому Энцо Феррари\",\r\n        ligue: ligues.cinema,\r\n        tags: [tags.forSports],\r\n        date: \"24.11.2022\",\r\n        update: \"18:40\",\r\n        image: \"https://ms1.relax.by/images/d4b21593f3f04b3b118e37d5e68927ff/thumb/w%3D400%2Ch%3D600%2Cq%3D90/afisha_event_photo/62/f6/18/62f6183fab964696a1025b4215f56393.jpg\",\r\n        adress: \"ул. Козлова, 4а\",\r\n        bookmark: false\r\n    }\r\n];\r\n\r\nif (!localStorage.getItem(\"articles\")) {\r\n    localStorage.setItem(\"articles\", JSON.stringify(articles));\r\n}\r\n\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            resolve(JSON.parse(localStorage.getItem(\"articles\")));\r\n        }, 2000);\r\n    });\r\nconst update = (id, data) =>\r\n    new Promise((resolve) => {\r\n        const articles = JSON.parse(localStorage.getItem(\"articles\"));\r\n        const articleIndex = articles.findIndex((u) => u._id === id);\r\n        articles[articleIndex] = { ...articles[articleIndex], ...data };\r\n        localStorage.setItem(\"articles\", JSON.stringify(articles));\r\n        resolve(articles[articleIndex]);\r\n    });\r\nconst add = (data) =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            const articles = JSON.parse(localStorage.getItem(\"articles\"));\r\n            const newArticle = {\r\n                ...data,\r\n                _id: Math.random().toString(36).substr(2, 9)\r\n            };\r\n            articles.push(newArticle);\r\n            localStorage.setItem(\"articles\", JSON.stringify(articles));\r\n            resolve(newArticle);\r\n        }, 200);\r\n    });\r\nconst getById = (id) =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            resolve(\r\n                JSON.parse(localStorage.getItem(\"articles\")).find(\r\n                    (article) => article._id === id\r\n                )\r\n            );\r\n        }, 1000);\r\n    });\r\nexport default {\r\n    fetchAll,\r\n    getById,\r\n    update,\r\n    add\r\n};\r\n","const tags = {\r\n    new: { _id: \"67rdca188\", name: \"Кино\", color: \"success\" },\r\n    gossip: { _id: \"67rdca200\", name: \"Танцы\", color: \"info\" },\r\n    stats: { _id: \"67rdca201\", name: \"Спорт\", color: \"info\" },\r\n    transfer: { _id: \"67rdca202\", name: \"Музыка\", color: \"info\" },\r\n    history: { _id: \"67rdca203\", name: \"Искусства\", color: \"yellow\" },\r\n    board: { _id: \"67rdca204\", name: \"Настольные игры\", color: \"yellow\" }\r\n};\r\n\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            resolve(tags);\r\n        }, 2000);\r\n    });\r\n\r\nexport default {\r\n    fetchAll\r\n};\r\n","import users from \"./fake.api/user.api\";\nimport professions from \"./fake.api/professions.api\";\nimport qualities from \"./fake.api/qualities.api\";\nimport comments from \"./fake.api/comments.api\";\nimport articles from \"./fake.api/article.api\";\nimport ligues from \"./fake.api/ligues.api\";\nimport tags from \"./fake.api/tags.api\";\nconst API = {\n    users,\n    professions,\n    qualities,\n    comments,\n    articles,\n    ligues,\n    tags\n};\nexport default API;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst searchStatusEvent = ({ length }) => {\r\n    return (\r\n        <div className={\"badge bg-\" + (length > 0 ? \"primary\" : \"danger\")}>\r\n            {length ? (\r\n                <h3>Мероприятий и встреч: {length}</h3>\r\n            ) : (\r\n                <h3>Мероприятия отсутствуют!</h3>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nsearchStatusEvent.propTypes = {\r\n    length: PropTypes.number.isRequired\r\n};\r\n\r\nexport default searchStatusEvent;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Tag = ({ color, name, _id }) => {\r\n    return (\r\n        <span key={_id} className={\"badge m-1 bg-\" + color}>\r\n            {name}\r\n        </span>\r\n    );\r\n};\r\n\r\nTag.propTypes = {\r\n    color: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    _id: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Tag;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tag from \"./tag\";\r\n\r\nconst TagsList = ({ tags }) => {\r\n    return (\r\n        <>\r\n            {tags.map((tag) => (\r\n                <Tag key={tag._id} {...tag} />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nTagsList.propTypes = {\r\n    tags: PropTypes.array\r\n};\r\n\r\nexport default TagsList;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookMark from \"../../common/bookmark\";\r\nimport TagsList from \"../../ui/tags/tagsList\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Article = ({\r\n    _id,\r\n    image,\r\n    title,\r\n    ligue,\r\n    tags,\r\n    text,\r\n    update,\r\n    adress,\r\n    date,\r\n    onDelete,\r\n    bookmark,\r\n    onToggleBookMark\r\n}) => {\r\n    return (\r\n        <div className=\"card text-dark w-50\">\r\n            <div className=\"row g-0\">\r\n                <div className=\"col-md-4 d-flex align-items-center\">\r\n                    <img\r\n                        src={image}\r\n                        className=\"img-fluid rounded-start\"\r\n                        alt={title}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-8 d-flex align-items-center\">\r\n                    <div className=\"card-body\">\r\n                        <div className=\"d-flex justify-content-end align-items-center\">\r\n                            <span className=\"badge bg-dark text-white m-1\">\r\n                                {ligue?.name}\r\n                            </span>\r\n                            <TagsList tags={tags} />\r\n                        </div>\r\n                        <h5 className=\"card-title text-center\">{title}</h5>\r\n                        {/* <p className=\"card-text\">\r\n                            {text &&\r\n                                text.slice(\r\n                                    0,\r\n                                    text.length > 30\r\n                                        ? text.length / 10\r\n                                        : text.length\r\n                                ) + \"...\"}\r\n                        </p> */}\r\n                        <div className=\"d-flex flex-column align-items-center\">\r\n                            <p>Дата проведения: {date}</p>\r\n                            <p>Время проведения: {update}</p>\r\n                            <p>Адресс: {adress}</p>\r\n                        </div>\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <Link to={`/articles/${_id}`}>\r\n                                <button className=\"btn btn btn-primary\">\r\n                                    Открыть\r\n                                </button>\r\n                            </Link>\r\n                            <BookMark\r\n                                status={bookmark}\r\n                                onClick={() => onToggleBookMark(_id)}\r\n                            />\r\n                            <button\r\n                                className=\"btn btn-danger\"\r\n                                onClick={() => onDelete(_id)}\r\n                            >\r\n                                Удалить\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nArticle.propTypes = {\r\n    _id: PropTypes.string,\r\n    image: PropTypes.string,\r\n    title: PropTypes.string,\r\n    ligue: PropTypes.object,\r\n    tags: PropTypes.array,\r\n    text: PropTypes.string,\r\n    adress: PropTypes.string,\r\n    onDelete: PropTypes.func,\r\n    bookmark: PropTypes.bool,\r\n    status: PropTypes.bool,\r\n    update: PropTypes.string,\r\n    date: PropTypes.string,\r\n    onToggleBookMark: PropTypes.func\r\n};\r\n\r\nexport default Article;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GroupHeader = ({ onSort, selectedSort, columns }) => {\r\n    const handleSort = (item) => {\r\n        if (selectedSort.iter === item) {\r\n            onSort({\r\n                ...selectedSort,\r\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\r\n            });\r\n        } else {\r\n            onSort({ iter: item, order: \"asc\" });\r\n        }\r\n    };\r\n    const renderSortArrow = (selectedSort, currentPath) => {\r\n        if (selectedSort.iter === currentPath) {\r\n            if (selectedSort.order === \"asc\") {\r\n                return <i className=\"bi bi-caret-down-fill\"></i>;\r\n            } else {\r\n                return <i className=\"bi bi-caret-up-fill\"></i>;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    return (\r\n        <div className=\"d-flex mt-1 flex-wrap\">\r\n            <div className=\"m-1 fw-bold fs-6\">Сортировать по:</div>\r\n            {Object.keys(columns).map((column) => (\r\n                <span\r\n                    key={column}\r\n                    onClick={() => handleSort(columns[column].iter)}\r\n                    className=\"m-1 fs-6\"\r\n                    style={{ textDecoration: \"underline\" }}\r\n                    role={\"button\"}\r\n                >\r\n                    {columns[column].title}\r\n                    {renderSortArrow(selectedSort, columns[column].iter)}\r\n                </span>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nGroupHeader.propTypes = {\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default GroupHeader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Article from \"./article\";\r\nimport GroupHeader from \"./groupHeader\";\r\n\r\nconst ArticlesGroup = ({\r\n    articles,\r\n    onSort,\r\n    selectedSort,\r\n    onDelete,\r\n    onToggleBookMark\r\n}) => {\r\n    const columns = {\r\n        title: { iter: \"title\", title: \"названию\" },\r\n        ligues: { iter: \"ligue.name\", title: \"категории\" },\r\n        bookmark: { iter: \"bookmark\", title: \"избранному\" },\r\n        update: { iter: \"update\", title: \"времени\" }\r\n    };\r\n    return (\r\n        <>\r\n            <GroupHeader {...{ onSort, selectedSort, columns }} />\r\n            <div className=\"d-flex flex-row justify-content-around flex-wrap w-100\">\r\n                {articles.map((article) => (\r\n                    <Article\r\n                        key={article._id}\r\n                        {...article}\r\n                        {...{ onDelete, onToggleBookMark }}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nArticlesGroup.propTypes = {\r\n    articles: PropTypes.array.isRequired,\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onToggleBookMark: PropTypes.func\r\n};\r\n\r\nexport default ArticlesGroup;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center m-5\">\r\n            <div className=\"spinner-border text-primary\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { paginate } from \"../../../utils/paginate\";\r\nimport API from \"../../../api\";\r\nimport GroupList from \"../../common/groupList\";\r\nimport SearchStatusEvent from \"../../ui/searchStatusEvent\";\r\nimport Pagination from \"../../common/pagination\";\r\nimport ArticlesGroup from \"./articlesGroup\";\r\nimport Loader from \"../../ui/loader\";\r\n\r\nconst ArticlesList = () => {\r\n    const pageSize = 4;\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [ligues, setLigues] = useState();\r\n    const [selectedLigue, setSelectedLigue] = useState();\r\n    const [sortBy, setSortBy] = useState({ iter: \"title\", order: \"asc\" });\r\n    const [articles, setArticles] = useState();\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        API.articles.fetchAll().then((data) => setArticles(data));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        API.ligues.fetchAll().then((data) => setLigues(data));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(1);\r\n    }, [selectedLigue, searchQuery]);\r\n\r\n    const handleDelete = (articleId) => {\r\n        setArticles(articles.filter((article) => article._id !== articleId));\r\n    };\r\n    const handleToggleBookMark = (id) => {\r\n        console.log(`click ${id}`);\r\n        setArticles(\r\n            articles.map((article) => {\r\n                if (article._id === id) {\r\n                    article.bookmark = !article.bookmark;\r\n                    return article;\r\n                }\r\n                return article;\r\n            })\r\n        );\r\n    };\r\n    const handleSort = (item) => {\r\n        setSortBy(item);\r\n    };\r\n    const handlePageChange = (pageIndex) => {\r\n        setCurrentPage(pageIndex);\r\n    };\r\n    const handleLiguesSelect = (item) => {\r\n        if (searchQuery !== \"\") return setSearchQuery(\"\");\r\n        setSelectedLigue(item);\r\n    };\r\n    const handleSearchQuery = ({ target }) => {\r\n        setSelectedLigue(undefined);\r\n        setSearchQuery(target.value);\r\n    };\r\n    const clearFilter = () => {\r\n        setSelectedLigue();\r\n    };\r\n\r\n    if (articles) {\r\n        const filteredArticles = searchQuery\r\n            ? articles.filter(\r\n                  (article) =>\r\n                      article.title\r\n                          .toLowerCase()\r\n                          .indexOf(searchQuery.toLowerCase()) !== -1\r\n              )\r\n            : selectedLigue\r\n            ? articles.filter(\r\n                  (article) =>\r\n                      JSON.stringify(article.ligue) ===\r\n                      JSON.stringify(selectedLigue)\r\n              )\r\n            : articles;\r\n        const count = filteredArticles.length;\r\n        const sortedArticles = _.orderBy(\r\n            filteredArticles,\r\n            [sortBy.iter],\r\n            [sortBy.order]\r\n        );\r\n        const articleCrop = paginate(sortedArticles, currentPage, pageSize);\r\n\r\n        return (\r\n            <div className=\"d-flex container\">\r\n                {ligues && (\r\n                    <div className=\"col-2 d-flex flex-column p-3\">\r\n                        <GroupList\r\n                            items={ligues}\r\n                            onItemSelect={handleLiguesSelect}\r\n                            selectedItem={selectedLigue}\r\n                        />\r\n                        <button\r\n                            className=\"btn btn-secondary mt-2\"\r\n                            onClick={clearFilter}\r\n                        >\r\n                            Очистить\r\n                        </button>\r\n                        <input\r\n                            className=\"input-search mt-1\"\r\n                            type=\"text\"\r\n                            name=\"searchQuery\"\r\n                            placeholder=\"Найти...\"\r\n                            onChange={handleSearchQuery}\r\n                            value={searchQuery}\r\n                        ></input>\r\n                    </div>\r\n                )}\r\n                <div className=\"col-10 d-flex flex-column align-items-center p-3\">\r\n                    <SearchStatusEvent length={count} />\r\n\r\n                    {count > 0 && (\r\n                        <ArticlesGroup\r\n                            articles={articleCrop}\r\n                            onSort={handleSort}\r\n                            selectedSort={sortBy}\r\n                            onDelete={handleDelete}\r\n                            onToggleBookMark={handleToggleBookMark}\r\n                        />\r\n                    )}\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                            itemsCount={count}\r\n                            pageSize={pageSize}\r\n                            onPageChange={handlePageChange}\r\n                            currentPage={currentPage}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return <Loader />;\r\n};\r\n\r\nexport default ArticlesList;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { validator } from \"../../../utils/ validator\";\r\nimport API from \"../../../api\";\r\nimport TextField from \"../../common/form/textField\";\r\nimport TextAreaField from \"../../common/form/textAreaField\";\r\nimport SelectField from \"../../common/form/selectField\";\r\nimport MultiSelectField from \"../../common/form/multiSelectField\";\r\nimport Loader from \"../../ui/loader\";\r\n\r\nconst EditArticlePage = () => {\r\n    const { articleId } = useParams();\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [data, setData] = useState({\r\n        title: \"\",\r\n        text: \"\",\r\n        ligue: \"\",\r\n        update: \"\",\r\n        tags: [],\r\n        date: \"\",\r\n        adress: \"\",\r\n        bookmark: false,\r\n        image: \"\"\r\n    });\r\n    const [ligues, setLigues] = useState([]);\r\n    const [tags, setTags] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const getLigueById = (name) => {\r\n        for (const lig in ligues) {\r\n            const ligData = ligues[lig];\r\n            if (ligData.name === name) return ligData;\r\n        }\r\n    };\r\n    const getTags = (elements) => {\r\n        const tagsArray = [];\r\n        for (const elem of elements) {\r\n            for (const tag in tags) {\r\n                if (elem.value === tags[tag]._id) {\r\n                    tagsArray.push(tags[tag]);\r\n                }\r\n            }\r\n        }\r\n        return tagsArray;\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        const { ligue, tags } = data;\r\n        API.articles\r\n            .update(articleId, {\r\n                ...data,\r\n                ligue: getLigueById(ligue),\r\n                tags: getTags(tags)\r\n            })\r\n            .then((data) => history.push(`/articles/${data._id}`));\r\n        console.log(data);\r\n    };\r\n    const transformData = (data) => {\r\n        return data.map((tag) => ({ label: tag.name, value: tag._id }));\r\n    };\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        API.articles.getById(articleId).then(({ ligue, tags, ...data }) =>\r\n            setData((prevState) => ({\r\n                ...prevState,\r\n                ...data,\r\n                tags: transformData(tags),\r\n                ligue: ligue.name\r\n            }))\r\n        );\r\n        API.tags.fetchAll().then((data) => setTags(data));\r\n        API.ligues.fetchAll().then((data) => setLigues(data));\r\n    }, []);\r\n    useEffect(() => {\r\n        if (data._id) setIsLoading(false);\r\n    }, [data]);\r\n\r\n    const validatorConfig = {\r\n        title: {\r\n            isRequired: {\r\n                message: \"Введите название\"\r\n            }\r\n        },\r\n        ligue: {\r\n            isRequired: { message: \"Категория обязательна для заполнения\" }\r\n        }\r\n    };\r\n    useEffect(() => validate(), [data]);\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n    };\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const handleBack = () => {\r\n        history.push(`/articles/${data._id}`);\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <button className=\"btn btn-sm btn-primary m-1\" onClick={handleBack}>\r\n                Назад\r\n            </button>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n                    {!isLoading && Object.keys(ligues).length > 0 ? (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <TextField\r\n                                label=\"Заголовок события\"\r\n                                name=\"title\"\r\n                                value={data.title}\r\n                                onChange={handleChange}\r\n                                error={errors.title}\r\n                            />\r\n                            <TextAreaField\r\n                                label=\"Описание события\"\r\n                                name=\"text\"\r\n                                value={data.text}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <SelectField\r\n                                label=\"Выберите категорию\"\r\n                                onChange={handleChange}\r\n                                options={ligues}\r\n                                error={errors.ligue}\r\n                                value={data.ligue}\r\n                                name=\"ligue\"\r\n                                defaultOption=\"Выбрать...\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Дата события\"\r\n                                name=\"date\"\r\n                                value={data.date}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <TextField\r\n                                label=\"Время события\"\r\n                                name=\"update\"\r\n                                value={data.update}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <TextField\r\n                                label=\"Адрес события\"\r\n                                name=\"adress\"\r\n                                value={data.adress}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <TextField\r\n                                label=\"URL изображения\"\r\n                                name=\"image\"\r\n                                value={data.image}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <MultiSelectField\r\n                                defaultValue={data.tags}\r\n                                options={tags}\r\n                                onChange={handleChange}\r\n                                name=\"tags\"\r\n                                label=\"Выберите теги\"\r\n                            />\r\n                            <button\r\n                                type=\"submit\"\r\n                                disabled={!isValid}\r\n                                className=\"btn btn-primary w-100 mx-auto\"\r\n                            >\r\n                                Обновить\r\n                            </button>\r\n                        </form>\r\n                    ) : (\r\n                        <Loader />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditArticlePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport API from \"../../../api\";\r\nimport TagsList from \"../../ui/tags/tagsList\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Loader from \"../../ui/loader\";\r\n\r\nconst ArticlePage = ({ articleId }) => {\r\n    const history = useHistory();\r\n    const [article, setArticle] = useState();\r\n    useEffect(() => {\r\n        API.articles.getById(articleId).then((data) => setArticle(data));\r\n    }, []);\r\n    const handleBack = () => {\r\n        history.push(\"/articles\");\r\n    };\r\n    const handleEdit = () => {\r\n        history.push(history.location.pathname + \"/edit\");\r\n    };\r\n    if (article) {\r\n        return (\r\n            <div className=\"d-flex flex-column container shadow p-3 rounded\">\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <span>\r\n                        <button\r\n                            className=\"btn btn-sm btn-primary m-1\"\r\n                            onClick={handleBack}\r\n                        >\r\n                            Назад\r\n                        </button>\r\n                    </span>\r\n                    <div className=\"d-flex align-items-center justify-content-around w-100\">\r\n                        <strong>Дата проведения: </strong>\r\n                        {article.date}\r\n                        <strong>Время проведения: </strong>\r\n                        {article.update}\r\n                        <strong>Место проведения: </strong>\r\n                        {article.adress}\r\n                        <TagsList tags={article.tags} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"d-flex flex-nowrap\">\r\n                    <div className=\"p-2\">\r\n                        <h1 className=\"text-center\">{article.title}</h1>\r\n                        <p>\r\n                            <img\r\n                                className=\"float-end m-2\"\r\n                                src={article.image}\r\n                                alt={article.title}\r\n                            />\r\n                            {article.text}\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"p-2 bd-highlight d-flex flex-column align-items-center\">\r\n                        <button\r\n                            className=\"btn btn-sm btn-primary\"\r\n                            onClick={handleEdit}\r\n                        >\r\n                            Редактировать\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <Loader />;\r\n    }\r\n};\r\n\r\nArticlePage.propTypes = {\r\n    articleId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ArticlePage;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ArticlesList from \"../components/page/eventsListPage/articlesList\";\r\nimport EditArticlePage from \"../components/page/eventsListPage/editArticlePage\";\r\nimport ArticlePage from \"../components/page/eventsListPage/articlePage\";\r\n\r\nconst Events = () => {\r\n    const params = useParams();\r\n    const { articleId, edit } = params;\r\n    return (\r\n        <>\r\n            {articleId ? (\r\n                edit ? (\r\n                    <EditArticlePage />\r\n                ) : (\r\n                    <ArticlePage articleId={articleId} />\r\n                )\r\n            ) : (\r\n                <ArticlesList />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Events;\r\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getCurrentUserData } from \"../../store/users\";\nconst NavProfile = () => {\n    const currentUser = useSelector(getCurrentUserData());\n    const [isOpen, setOpen] = useState(false);\n    const toggleMenu = () => {\n        setOpen((prevState) => !prevState);\n    };\n\n    if (!currentUser) return \"loading\";\n    return (\n        <div className=\"dropdown\" onClick={toggleMenu}>\n            <div className=\"btn dropdown-toggle d-flex align-items-center\">\n                <div className=\"me-2\">{currentUser.name}</div>\n                <img\n                    src={currentUser.image}\n                    alt=\"\"\n                    height=\"40\"\n                    className=\"img-responsive rounded-circle\"\n                />\n            </div>\n            <div className={\"w-100 dropdown-menu\" + (isOpen ? \" show\" : \"\")}>\n                <Link\n                    to={`/users/${currentUser._id}`}\n                    className=\"dropdown-item\"\n                >\n                    Профиль\n                </Link>\n                <Link to=\"/logout\" className=\"dropdown-item\">\n                    Выход\n                </Link>\n            </div>\n        </div>\n    );\n};\n\nexport default NavProfile;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport { getIsLoggedIn } from \"../../store/users\";\nimport NavProfile from \"./navProfile\";\nconst NavBar = () => {\n    const isLoggedIn = useSelector(getIsLoggedIn());\n    return (\n        <nav className=\"navbar bg-white fs-5 mb-3 container\">\n            <div className=\"container-fluid\">\n                <ul className=\"nav\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">\n                            <i className=\"bi bi-house\"></i>Главная\n                        </Link>\n                    </li>\n                    {isLoggedIn && (\n                        <li className=\"nav-item\">\n                            <Link\n                                className=\"nav-link\"\n                                aria-current=\"page\"\n                                to=\"/addEvent\"\n                            >\n                                Добавить новое событие\n                            </Link>\n                        </li>\n                    )}\n                    <li className=\"nav-item\">\n                        <Link\n                            className=\"nav-link\"\n                            aria-current=\"page\"\n                            to=\"/articles\"\n                        >\n                            События\n                        </Link>\n                    </li>\n                    {isLoggedIn && (\n                        <li className=\"nav-item\">\n                            <Link\n                                className=\"nav-link\"\n                                aria-current=\"page\"\n                                to=\"/users\"\n                            >\n                                <i className=\"bi bi-people\"></i>Участники\n                            </Link>\n                        </li>\n                    )}\n                </ul>\n                <div className=\"d-flex\">\n                    {isLoggedIn ? (\n                        <NavProfile />\n                    ) : (\n                        <Link\n                            className=\"nav-link\"\n                            aria-current=\"page\"\n                            to=\"/login\"\n                        >\n                            <i className=\"bi bi-box-arrow-in-left\"></i>Войти\n                        </Link>\n                    )}\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nexport default NavBar;\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { validator } from \"../../../utils/ validator\";\r\nimport API from \"../../../api\";\r\nimport Loader from \"../../ui/loader\";\r\nimport TextField from \"../../common/form/textField\";\r\nimport TextAreaField from \"../../common/form/textAreaField\";\r\nimport SelectField from \"../../common/form/selectField\";\r\nimport MultiSelectField from \"../../common/form/multiSelectField\";\r\n\r\nconst AddArticlePage = () => {\r\n    const { articleId } = useParams();\r\n    const history = useHistory();\r\n    const [isLoading] = useState(false);\r\n    const [data, setData] = useState({\r\n        title: \"\",\r\n        text: \"\",\r\n        ligue: \"\",\r\n        update: \"\",\r\n        tags: [],\r\n        date: \"\",\r\n        adress: \"\",\r\n        bookmark: false,\r\n        image: \"\"\r\n    });\r\n    const [ligues, setLigues] = useState([]);\r\n    const [tags, setTags] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const getLigueById = (name) => {\r\n        for (const lig in ligues) {\r\n            const ligData = ligues[lig];\r\n            if (ligData.name === name) return ligData;\r\n        }\r\n    };\r\n    const getTags = (elements) => {\r\n        const tagsArray = [];\r\n        for (const elem of elements) {\r\n            for (const tag in tags) {\r\n                if (elem.value === tags[tag]._id) {\r\n                    tagsArray.push(tags[tag]);\r\n                }\r\n            }\r\n        }\r\n        return tagsArray;\r\n    };\r\n\r\n    useEffect(() => {\r\n        API.tags.fetchAll().then((data) => setTags(data));\r\n        API.ligues.fetchAll().then((data) => setLigues(data));\r\n    }, []);\r\n\r\n    const validatorConfig = {\r\n        title: {\r\n            isRequired: { message: \"Заголовок обязателен для заполнения\" }\r\n        },\r\n        text: {\r\n            isRequired: { message: \"Текст обязателен для заполнения\" }\r\n        },\r\n        ligue: {\r\n            isRequired: { message: \"Категория обязательна для заполнения\" }\r\n        },\r\n        update: {\r\n            isRequired: {\r\n                message: \"Время обязательно для заполнения\"\r\n            }\r\n        },\r\n        date: {\r\n            isRequired: {\r\n                message: \"Дата обязательна для заполнения\"\r\n            }\r\n        },\r\n        adress: {\r\n            isRequired: {\r\n                message: \"Адрес обязателен для заполнения\"\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        const { ligue, tags } = data;\r\n        API.articles\r\n            .add({ ...data, ligue: getLigueById(ligue), tags: getTags(tags) })\r\n            .then((data) => history.push(`/articles`));\r\n        console.log(data);\r\n        console.log(articleId);\r\n    };\r\n\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({ ...prevState, [target.name]: target.value }));\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n                    {!isLoading && Object.keys(ligues).length > 0 ? (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <TextField\r\n                                label=\"Заголовок события\"\r\n                                name=\"title\"\r\n                                value={data.title}\r\n                                onChange={handleChange}\r\n                                error={errors.title}\r\n                            />\r\n                            <TextAreaField\r\n                                label=\"Описание события\"\r\n                                name=\"text\"\r\n                                value={data.text}\r\n                                onChange={handleChange}\r\n                                error={errors.text}\r\n                            />\r\n                            <SelectField\r\n                                label=\"Выберите категорию\"\r\n                                defaultOption=\"Выбрать...\"\r\n                                onChange={handleChange}\r\n                                options={ligues}\r\n                                error={errors.ligue}\r\n                                value={data.ligue}\r\n                                name=\"ligue\"\r\n                            />\r\n                            <TextField\r\n                                label=\"Дата события\"\r\n                                name=\"date\"\r\n                                value={data.date}\r\n                                onChange={handleChange}\r\n                                error={errors.date}\r\n                            />\r\n                            <TextField\r\n                                label=\"Время события\"\r\n                                name=\"update\"\r\n                                value={data.update}\r\n                                onChange={handleChange}\r\n                                error={errors.update}\r\n                            />\r\n                            <TextField\r\n                                label=\"Адрес события\"\r\n                                name=\"adress\"\r\n                                value={data.adress}\r\n                                onChange={handleChange}\r\n                                error={errors.adress}\r\n                            />\r\n                            <TextField\r\n                                label=\"URL изображения\"\r\n                                name=\"image\"\r\n                                value={data.image}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <MultiSelectField\r\n                                defaultValue={data.tags}\r\n                                options={tags}\r\n                                onChange={handleChange}\r\n                                name=\"tags\"\r\n                                label=\"Выберите теги\"\r\n                            />\r\n                            <button\r\n                                type=\"submit\"\r\n                                disabled={!isValid}\r\n                                className=\"btn btn-primary w-100 mx-auto\"\r\n                            >\r\n                                Добавить\r\n                            </button>\r\n                        </form>\r\n                    ) : (\r\n                        <Loader />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AddArticlePage;\r\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport { getIsLoggedIn } from \"../../store/users\";\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\n    const isLoggedIn = useSelector(getIsLoggedIn());\n\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                if (!isLoggedIn) {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: \"/login\",\n                                state: {\n                                    from: props.location\n                                }\n                            }}\n                        />\n                    );\n                }\n                return Component ? <Component {...props} /> : children;\n            }}\n        />\n    );\n};\nProtectedRoute.propTypes = {\n    component: PropTypes.func,\n    location: PropTypes.object,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default ProtectedRoute;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logOut } from \"../store/users\";\nconst LogOut = () => {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        console.log(\"logout\");\n        dispatch(logOut());\n    }, []);\n    return <h1>Загрузка...</h1>;\n};\n\nexport default LogOut;\n","import { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    getIsLoggedIn,\n    getUsersLoadingStatus,\n    loadUsersList\n} from \"../../../store/users\";\nimport { loadQualitiesList } from \"../../../store/qualities\";\nimport { loadProfessionsList } from \"../../../store/professions\";\n\nconst AppLoader = ({ children }) => {\n    const dispatch = useDispatch();\n    const isLoggedIn = useSelector(getIsLoggedIn());\n    const usersStatusLoading = useSelector(getUsersLoadingStatus());\n    useEffect(() => {\n        dispatch(loadQualitiesList());\n        dispatch(loadProfessionsList());\n        if (isLoggedIn) {\n            dispatch(loadUsersList());\n        }\n    }, [isLoggedIn]);\n    if (usersStatusLoading) return \"loading\";\n    return children;\n};\n\nAppLoader.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\nexport default AppLoader;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nimport Users from \"./layouts/users\";\nimport Login from \"./layouts/login\";\nimport Main from \"./layouts/main\";\nimport Events from \"./layouts/events\";\nimport NavBar from \"./components/ui/navBar\";\nimport { ToastContainer } from \"react-toastify\";\nimport AddArticlePage from \"./components/page/eventsListPage/addArticlePage\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport LogOut from \"./layouts/logOut\";\nimport AppLoader from \"./components/ui/hoc/appLoader\";\n\nfunction App() {\n    return (\n        <div>\n            <AppLoader>\n                <NavBar />\n                <Switch>\n                    <ProtectedRoute\n                        path=\"/users/:userId?/:edit?\"\n                        component={Users}\n                    />\n                    <ProtectedRoute\n                        path=\"/addEvent\"\n                        component={AddArticlePage}\n                    />\n                    <Route\n                        path=\"/articles/:articleId?/:edit?\"\n                        component={Events}\n                    />\n                    <Route path=\"/login/:type?\" component={Login} />\n                    <Route path=\"/logout\" component={LogOut} />\n                    <Route path=\"/\" exact component={Main} />\n                    <Redirect to=\"/\" />\n                </Switch>\n            </AppLoader>\n            <ToastContainer />\n        </div>\n    );\n}\n\nexport default App;\n","import commentsReducer from \"./comments\";\nimport professionsReducer from \"./professions\";\nimport qualitiesReducer from \"./qualities\";\nimport usersReducer from \"./users\";\n\nconst { combineReducers, configureStore } = require(\"@reduxjs/toolkit\");\n\nconst rootReducer = combineReducers({\n    qualities: qualitiesReducer,\n    professions: professionsReducer,\n    users: usersReducer,\n    comments: commentsReducer\n});\n\nexport function createStore() {\n    return configureStore({\n        reducer: rootReducer\n    });\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./app/App\";\nimport { Router } from \"react-router-dom\";\nimport { createStore } from \"./app/store/createStore\";\nimport { Provider } from \"react-redux\";\nimport history from \"./app/utils/history\";\n\nconst store = createStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <Router history={history}>\n                <App />\n            </Router>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}